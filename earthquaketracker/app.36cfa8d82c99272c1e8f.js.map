{"version":3,"sources":["webpack:///./app/style.css?429c","webpack:///./app/constants/index.tsx","webpack:///./app/components/Map/index.tsx","webpack:///./index.tsx","webpack:///./app/index.tsx","webpack:///./app/components/Map/style.css?3570"],"names":["module","exports","Statistics","ActionTypes","endPoint","mapboxLayer","getMagnitudes","magnitudes","index","magnitude","key","toString","value","text","push","accessToken","Map","props","mapboxElRef","mapState","setMap","data","setData","url","a","get","then","res","features","catch","error","Error","dropdownValue","setDropdownValue","length","container","current","style","center","zoom","addControl","NavigationControl","once","addSource","type","generateId","addLayer","popup","Popup","closeButton","closeOnClick","mapIsLoaded","lastId","on","e","properties","geometry","id","getCanvas","cursor","mag","place","time","coordinates","slice","HTML","Date","toDateString","toLocaleTimeString","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","remove","constructMap","className","Dropdown","onChange","event","dropdownData","setFilter","start","range","i","buildRange","placeholder","fluid","search","selection","options","onClick","Icon","size","name","ref","isLoading","setIsLoading","getFullYear","document","getElementById"],"mappings":"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","file":"app.36cfa8d82c99272c1e8f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"_368aN\",\"show\":\"B6dGk\",\"settings\":\"_13ec-\",\"hide\":\"_3EZK8\",\"title\":\"_1vK49\",\"footnote\":\"_33dIt\",\"loading\":\"_2-1bp\",\"sk-cube-grid\":\"dJx3H\",\"sk-cube\":\"YNBFx\",\"sk-cubeGridScaleDelay\":\"z1y5-\",\"sk-cube1\":\"_3dPKl\",\"sk-cube2\":\"K4DdG\",\"sk-cube3\":\"_3sjW5\",\"sk-cube4\":\"TE8uC\",\"sk-cube5\":\"_2_eio\",\"sk-cube6\":\"_2RoRs\",\"sk-cube7\":\"_3-Pw5\",\"sk-cube8\":\"_3nyNb\",\"sk-cube9\":\"ZwKBu\"};","import { Models } from 'app/models';\nimport { DropdownItemProps } from 'semantic-ui-react';\n\nexport const assetsPath: string =  '../../assets';\nexport interface Icon { [key: string]: JSX.Element; }\n\nexport const endPoint: Models.EndPoint = {\n\turl: 'http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson',\n};\nexport const mapboxToken: string = 'pk.eyJ1IjoicnVrYmluMDExIiwiYSI6ImNrYWdrbDI3bTA5NzgyeHBuaWkzbWIxeDQifQ.C7KY2elb_bs0qrST3HvSSQ';\nexport const mapboxStyle: string = 'mapbox://styles/rukbin011/ckc8or1203fi81irsp4poh1hv';\nexport const mapboxLayer: mapboxgl.Layer = {\n\t'id': 'earthquake-layer',\n\t'type': 'circle',\n\t'source': 'points',\n\t'paint': {\n\t\t'circle-opacity': 0.5,\n\t\t'circle-stroke-width': 0.5,\n\t\t'circle-color': [\n\t\t\t'interpolate',\n\t\t\t['linear'],\n\t\t\t['get', 'mag'],\n\t\t\t// https://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=9 color palette\n\t\t\t1, '#ffffcc',\n\t\t\t2, '#ffeda0',\n\t\t\t3, '#fed976',\n\t\t\t4, '#feb24c',\n\t\t\t5, '#fd8d3c',\n\t\t\t6, '#fc4e2a',\n\t\t\t7, '#e31a1c',\n\t\t\t8, '#bd0026',\n\t\t\t9, '#b10026',\n\t\t\t10, '#b10026',\n\t\t],\n\t\t'circle-radius': [\n\t\t\t'interpolate',\n\t\t\t['linear'],\n\t\t\t['get', 'mag'],\n\t\t\t0, 2,\n\t\t\t1, 4,\n\t\t\t2, 8,\n\t\t\t3, 12,\n\t\t\t4, 16,\n\t\t\t5, 20,\n\t\t\t6, 30,\n\t\t\t7, 45,\n\t\t\t8, 65,\n\t\t\t9, 75,\n\t\t\t10, 100\n\t\t]\n\t}\n};\n\nexport const getMagnitudes = (): DropdownItemProps[] => {\n\tconst magnitudes: DropdownItemProps[] = [];\n\tfor (let index = 1; index <= 10; index++) {\n\t\tconst magnitude = { key: index.toString(), value: index.toString(), text: `Magnitude ${index.toString()}+` };\n\t\tmagnitudes.push(magnitude);\n\t}\n\treturn magnitudes;\n};\n\nexport enum Statistics {\n\tCONFIRMED = 'confirmed',\n\tRECOVERED = 'recovered',\n\tDEATHS = 'deaths'\n}\n\nexport enum ActionTypes {\n\tGET_STATISTICS_REQUEST = 'GET_STATISTICS_REQUEST',\n\tGET_STATISTICS_SUCCESS = 'GET_STATISTICS_SUCCESS',\n\tGET_STATISTICS_FAILED = 'GET_STATISTICS_FAILED',\n\n\tSET_GLOBAL_STATISTICS = 'SET_GLOBAL_STATISTICS',\n\tSET_COUNTRY_STATISTICS = 'SET_COUNTRY_STATISTICS',\n\n\tGET_COUNTRIES_REQUEST = 'GET_COUNTRIES_REQUEST',\n\tGET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS',\n\tGET_COUNTRIES_FAILED = 'GET_COUNTRIES_FAILED',\n\n\tGET_DAILY_REQUEST = 'GET_DAILY_REQUEST',\n\tGET_DAILY_SUCCESS = 'GET_DAILY_SUCCESS',\n\tGET_DAILY_FAILED = 'GET_DAILY_FAILED'\n}","import * as React from 'react';\nimport * as style from './style.css';\nimport mapboxgl, { LngLatLike } from 'mapbox-gl';\nimport axios from 'axios';\nimport { endPoint, mapboxToken, mapboxStyle, mapboxLayer, getMagnitudes } from 'app/constants';\nimport { Dropdown, DropdownProps, Icon } from 'semantic-ui-react';\n\n// Mapbox css - needed to make tooltips work later in this article\n// import 'mapbox-gl/dist/mapbox-gl.css';\n\nmapboxgl.accessToken = mapboxToken;\n\nexport namespace Map {\n\texport interface Props {\n\t\tmapIsLoaded: () => void;\n\t}\n}\n\nexport const Map: React.FC<Map.Props> = (props: Map.Props) => {\n\t// let map: mapboxgl.Map;\n\tconst mapboxElRef = React.useRef(null); // DOM element to render map\n\tconst [mapState, setMap] = React.useState<mapboxgl.Map | null>(null);\n\tconst [data, setData] = React.useState<any>([]);\n\n\tconst fetchData = (url: string) => {\n\t\taxios.get(url)\n\t\t.then((res: any) => {\n\t\t\tsetData(res.data.features);\n\t\t})\n\t\t.catch((error: any) => {\n\t\t\tthrow new Error(error);\n\t\t});\n\t};\n\n\tReact.useEffect(() => {\n\t\tfetchData(endPoint.url);\n\t}, []);\n\t\n\tconst constructMap = () => {\n\t\tif (data.length > 0) {\n\t\t\t// You can store the map instance with useRef too\n\t\t\tconst map = new mapboxgl.Map({\n\t\t\t\tcontainer: mapboxElRef.current!,\n\t\t\t\t// style: 'mapbox://styles/rukbin011/ckagtrcc110de1ipt2pzqqn5v',\n\t\t\t\tstyle: mapboxStyle,\n\t\t\t\tcenter: [121.76572,  13.01153], // initial geo location for Philippines\n\t\t\t\tzoom: 4 // initial zoom\n\t\t\t});\n\n\t\t\t// Add navigation controls to the top right of the canvas\n\t\t\tmap.addControl(new mapboxgl.NavigationControl());\n\n\t\t\t// Call this method when the map is loaded\n\t\t\tmap.once('load', function() {\n\t\t\t\t// Add our SOURCE\n\t\t\t\t// with id 'points'\n\t\t\t\tmap.addSource('points', {\n\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\tgenerateId: true,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: 'FeatureCollection',\n\t\t\t\t\t\t// features: data as Feature<Geometry, GeoJsonProperties>[]\n\t\t\t\t\t\tfeatures: data as any // change later\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Add the circle layers\n\t\t\t\tmap.addLayer(mapboxLayer);\n\n\t\t\t\t// Create a mapbox popup\n\t\t\t\tconst popup = new mapboxgl.Popup({\n\t\t\t\t\tcloseButton: false,\n\t\t\t\t\tcloseOnClick: false\n\t\t\t\t});\n\n\t\t\t\tsetMap(map as any);\n\t\t\t\tprops.mapIsLoaded();\n\n\t\t\t\t// Variable to hold the active country/province on hover\n\t\t\t\tlet lastId: number | null = null;\n\n\t\t\t\t// Mouse move event\n\t\t\t\tmap.on('mousemove', 'earthquake-layer', e => {\n\t\t\t\t\tif (e.features && e.features[0].properties && e.features[0].geometry.type === 'Point') {\n\t\t\t\t\t\t// Get the id from the properties\n\t\t\t\t\t\tconst id = e.features[0].id as number;\n\t\t\t\t\t\t// Only if the id are different we process the tooltip\n\t\t\t\t\t\tif (id !== lastId) {\n\t\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t\t\t// map.setPaintProperty(\n\t\t\t\t\t\t\t// \t'Outline', \n\t\t\t\t\t\t\t// \t'circle-radius', \n\t\t\t\t\t\t\t// \t['match', ['get', id.toString()], id.toString(), 100, 0]\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t// map.setPaintProperty(\n\t\t\t\t\t\t\t// \t'Outline', \n\t\t\t\t\t\t\t// \t'circle-opacity', \n\t\t\t\t\t\t\t// \t['match', ['get', id.toString()], id.toString(), 1, 0]\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t// Change the pointer type on move move\n\t\t\t\t\t\t\tmap.getCanvas().style.cursor = 'pointer';\n\n\t\t\t\t\t\t\tconst { mag, place, time }: any = e.features[0].properties;\n\t\t\t\t\t\t\tconst coordinates = e.features[0].geometry.coordinates!.slice();\n\t\t\t\t\t\t\t// Get all data for the tooltip\n\n\t\t\t\t\t\t\tconst locationHtml = place !== 'null' ? `<p>Location: <b>${place}</b></p>` : '';\n\n\t\t\t\t\t\t\t\tconst HTML = `${locationHtml}\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Time: <b>${new Date(time).toDateString()} - ${new Date(time).toLocaleTimeString()}</b></p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Magnitude: <b>${mag}</b></p>`;\n\n\t\t\t\t\t\t\t// Ensure that if the map is zoomed out such that multiple\n\t\t\t\t\t\t\t// copies of the feature are visible, the popup appears\n\t\t\t\t\t\t\t// over the copy being pointed to.\n\t\t\t\t\t\t\twhile (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n\t\t\t\t\t\t\t\tcoordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpopup\n\t\t\t\t\t\t\t\t.setLngLat(coordinates as LngLatLike)\n\t\t\t\t\t\t\t\t.setHTML(HTML)\n\t\t\t\t\t\t\t\t.addTo(map);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Mouse leave event\n\t\t\t\tmap.on('mouseleave', 'earthquake-layer', () => {\n\t\t\t\t\t// Reset the last Id\n\t\t\t\t\tlastId = null;\n\t\t\t\t\tmap.getCanvas().style.cursor = '';\n\t\t\t\t\tpopup.remove();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\tconst [dropdownValue, setDropdownValue] = React.useState<string>('');\n\n\t// Initialize our map\n\tReact.useEffect(() => {\n\t\tif (data.length > 0) {\n\t\t\tconstructMap();\n\t\t}\n\t}, [data]);\n\n\tconst buildRange = (start: number): (number | string)[] => {\n\t\tconst range: (number | string)[] = ['in', 'mag'];\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst value: string = `${start}.${i}`;\n\t\t\trange.push(+value);\n\t\t}\n\t\treturn range;\n\t};\n\n\tconst handleDropdownChange = (event: React.SyntheticEvent<HTMLElement, Event>, dropdownData: DropdownProps) => {\n\t\tconst magnitude: number | null = dropdownData.value ? +dropdownData.value : null;\n\t\tsetDropdownValue(dropdownData.value as string);\n\t\tif (mapState && magnitude) {\n\t\t\t// mapState.setFilter('earthquake-layer', ['>=', ['get', 'mag'], magnitude]);\n\t\t\t// filter in magnitude with range from .0 to .9;\n\t\t\tmapState.setFilter('earthquake-layer', buildRange(magnitude));\n\t\t}\n\t};\n\n\tconst resetFilter = () => {\n\t\t// reset filter\n\t\tif (mapState) {\n\t\t\tsetDropdownValue('');\n\t\t\tmapState.setFilter('earthquake-layer', null);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className={style.dropdown}>\n\t\t\t\t<Dropdown\n\t\t\t\t\tonChange={handleDropdownChange}\n\t\t\t\t\tplaceholder='Select Magnitude'\n\t\t\t\t\tfluid\n\t\t\t\t\tsearch\n\t\t\t\t\tselection\n\t\t\t\t\toptions={getMagnitudes()}\n\t\t\t\t\tvalue={dropdownValue}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{dropdownValue !== '' && <div onClick={resetFilter} className={style.repeat}>\n\t\t\t\t<Icon size='big' name='repeat' />\n\t\t\t</div>}\n\t\t\t<div id={style.map}>\n\t\t\t\t<div className={style.mapContainer}>\n\t\t\t\t\t{/* Assigned Mapbox container */}\n\t\t\t\t\t<div className={style.mapBox} ref={mapboxElRef} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './app';\n\nimport 'normalize.css';\nimport './default.css';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);","import * as React from 'react';\nimport * as style from './style.css';\nimport { Map } from 'app/components';\n\nexport const App: React.FC = () => {\n\tconst [isLoading, setIsLoading] = React.useState(true);\n\n\tconst mapIsLoaded = () => {\n\t\tsetIsLoading(false);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{isLoading && <span className={style.loading}>\n\t\t\t\t<div className={style.title}>Monthly Earthquake tracker</div>\t\n\t\t\t\t<div className={style['sk-cube-grid']}>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube1']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube2']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube3']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube4']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube5']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube6']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube7']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube8']}`}></div>\n\t\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube9']}`}></div>\n\t\t\t\t</div>\n\t\t\t\t<div className={style.footnote}>\n\t\t\t\t\t<p>© {new Date().getFullYear()}, Coded by Kristoffer Robin Canlas</p>\n\t\t\t\t</div>\n\t\t\t</span>}\n\t\t\t<Map mapIsLoaded={mapIsLoaded} />\n\t\t</React.Fragment>\n\t);\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"_2KGeP\",\"mapContainer\":\"_3auwv\",\"mapBox\":\"_3IFrC\",\"mapboxgl-popup\":\"_1-CvP\",\"mapboxgl-popup-content\":\"_2nBJ5\",\"cases\":\"X3Bvp\",\"deaths\":\"_33wTd\",\"recovered\":\"_1_qCQ\",\"flag\":\"_2wgLF\",\"repeat\":\"kEmFC\",\"dropdown\":\"_2Cnsv\"};"],"sourceRoot":""}