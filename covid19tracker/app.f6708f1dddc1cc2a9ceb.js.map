{"version":3,"sources":["webpack:///./app/components/Countries/style.css?40ba","webpack:///./app/components/Loader/style.css?2200","webpack:///./app/components/Map/style.css?3570","webpack:///./app/style.css?429c","webpack:///../node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./app/constants/index.tsx","webpack:///./app/store/statistic/actions/index.ts","webpack:///./app/store/countries/actions/index.ts","webpack:///./app/components/Statistic/index.tsx","webpack:///./app/components/Countries/index.tsx","webpack:///./app/store/chart/actions/index.ts","webpack:///./app/components/Chart/index.tsx","webpack:///./app/components/Map/index.tsx","webpack:///./app/store/index.ts","webpack:///./app/components/Loader/index.tsx","webpack:///./app/store/statistic/reducers/index.ts","webpack:///./app/store/statistic/state.ts","webpack:///./app/store/countries/state.ts","webpack:///./app/store/countries/reducers/index.ts","webpack:///./app/store/chart/reducers/index.ts","webpack:///./app/store/chart/state.ts","webpack:///./index.tsx","webpack:///./app/index.tsx","webpack:///./app/components/Statistic/style.css?49ba","webpack:///./app/components/Chart/style.css?46c0"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Statistics","ActionTypes","CONSTANTS","getStats","endPoint","country","request","createAction","GET_STATISTICS_REQUEST","success","GET_STATISTICS_SUCCESS","failure","GET_STATISTICS_FAILED","dispatch","a","get","then","response","data","catch","error","StatisticConnect","state","statistics","statistic","lastUpdate","isLoading","actions","Container","className","element","Card","name","fluid","key","Content","Meta","Header","start","end","value","duration","separator","Description","getCountries","GET_COUNTRIES_REQUEST","GET_COUNTRIES_SUCCESS","GET_COUNTRIES_FAILED","CountryConnect","list","countries","countriesPayload","statsActions","countriesActions","Dropdown","loading","disabled","search","selection","onChange","event","type","SET_GLOBAL_STATISTICS","find","cases","recovered","deaths","updated","CONFIRMED","RECOVERED","DEATHS","SET_COUNTRY_STATISTICS","payload","Date","toDateString","options","getDaily","isGlobal","params","GET_DAILY_REQUEST","GET_DAILY_SUCCESS","GET_DAILY_FAILED","timeline","ChartConnect","dailyData","chart","Message","negative","labels","datasets","confirmed","label","borderColor","backgroundColor","fill","title","display","text","animation","easing","accessToken","initialState","middleware","rootReducer","Map","props","mapboxElRef","mapState","setMap","shouldFetch","setShouldFetch","localStorage","getItem","Math","floor","abs","getTime","url","r","setItem","toString","features","filter","coordinates","latitude","point","index","geometry","longitude","properties","province","stats","updatedAt","JSON","stringify","constructMap","covidData","parse","max","apply","incremental","i","push","container","current","style","center","zoom","addControl","NavigationControl","once","highestCases","casesSample","addSource","addLayer","source","paint","lastId","popup","Popup","closeButton","closeOnClick","on","getCanvas","cursor","slice","countryISO","byCountry","iso2","byInternet","provinceHTML","mortalityRate","toFixed","countryFlagHTML","Boolean","toLowerCase","constructFlag","HTML","Number","toLocaleString","lngLat","lng","setLngLat","setHTML","addTo","remove","mapIsLoaded","filteredCountry","findCountry","getCountry","panTo","setFilter","onClick","Icon","size","ref","Loader","StatisticReducer","handleActions","action","global","image","CountriesReducer","forEach","avatar","src","countryInfo","flag","ChartReducer","entries","date","store","sidebar","setSidebar","setIsLoading","sidebarRef","handleMousedown","contains","target","document","addEventListener","removeEventListener","getElementById"],"mappings":"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","file":"app.f6708f1dddc1cc2a9ceb.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"kI0id\",\"dropdown\":\"_101Pb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"_3ZXyf\",\"copyright\":\"_2nmE1\",\"sk-cube-grid\":\"_3Bce9\",\"sk-cube\":\"Wu22B\",\"sk-cubeGridScaleDelay\":\"_20Fb5\",\"sk-cube1\":\"_1Uh46\",\"sk-cube2\":\"_2-7kn\",\"sk-cube3\":\"SCmay\",\"sk-cube4\":\"_2EnHa\",\"sk-cube5\":\"_19ktS\",\"sk-cube6\":\"_1YDBK\",\"sk-cube7\":\"KGEVM\",\"sk-cube8\":\"_3Mjqw\",\"sk-cube9\":\"_3pUrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"_2KGeP\",\"mapContainer\":\"_3auwv\",\"mapBox\":\"_3IFrC\",\"mapboxgl-popup\":\"_1-CvP\",\"mapboxgl-popup-content\":\"_2nBJ5\",\"cases\":\"X3Bvp\",\"deaths\":\"_33wTd\",\"recovered\":\"_1_qCQ\",\"activeCases\":\"_32Fhn\",\"flag\":\"_2wgLF\",\"repeat\":\"kEmFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"_368aN\",\"show\":\"B6dGk\",\"settings\":\"_13ec-\",\"hide\":\"_3EZK8\",\"copyright\":\"_2t5mk\"};","var map = {\n\t\"./af\": 162,\n\t\"./af.js\": 162,\n\t\"./ar\": 163,\n\t\"./ar-dz\": 164,\n\t\"./ar-dz.js\": 164,\n\t\"./ar-kw\": 165,\n\t\"./ar-kw.js\": 165,\n\t\"./ar-ly\": 166,\n\t\"./ar-ly.js\": 166,\n\t\"./ar-ma\": 167,\n\t\"./ar-ma.js\": 167,\n\t\"./ar-sa\": 168,\n\t\"./ar-sa.js\": 168,\n\t\"./ar-tn\": 169,\n\t\"./ar-tn.js\": 169,\n\t\"./ar.js\": 163,\n\t\"./az\": 170,\n\t\"./az.js\": 170,\n\t\"./be\": 171,\n\t\"./be.js\": 171,\n\t\"./bg\": 172,\n\t\"./bg.js\": 172,\n\t\"./bm\": 173,\n\t\"./bm.js\": 173,\n\t\"./bn\": 174,\n\t\"./bn-bd\": 175,\n\t\"./bn-bd.js\": 175,\n\t\"./bn.js\": 174,\n\t\"./bo\": 176,\n\t\"./bo.js\": 176,\n\t\"./br\": 177,\n\t\"./br.js\": 177,\n\t\"./bs\": 178,\n\t\"./bs.js\": 178,\n\t\"./ca\": 179,\n\t\"./ca.js\": 179,\n\t\"./cs\": 180,\n\t\"./cs.js\": 180,\n\t\"./cv\": 181,\n\t\"./cv.js\": 181,\n\t\"./cy\": 182,\n\t\"./cy.js\": 182,\n\t\"./da\": 183,\n\t\"./da.js\": 183,\n\t\"./de\": 184,\n\t\"./de-at\": 185,\n\t\"./de-at.js\": 185,\n\t\"./de-ch\": 186,\n\t\"./de-ch.js\": 186,\n\t\"./de.js\": 184,\n\t\"./dv\": 187,\n\t\"./dv.js\": 187,\n\t\"./el\": 188,\n\t\"./el.js\": 188,\n\t\"./en-au\": 189,\n\t\"./en-au.js\": 189,\n\t\"./en-ca\": 190,\n\t\"./en-ca.js\": 190,\n\t\"./en-gb\": 191,\n\t\"./en-gb.js\": 191,\n\t\"./en-ie\": 192,\n\t\"./en-ie.js\": 192,\n\t\"./en-il\": 193,\n\t\"./en-il.js\": 193,\n\t\"./en-in\": 194,\n\t\"./en-in.js\": 194,\n\t\"./en-nz\": 195,\n\t\"./en-nz.js\": 195,\n\t\"./en-sg\": 196,\n\t\"./en-sg.js\": 196,\n\t\"./eo\": 197,\n\t\"./eo.js\": 197,\n\t\"./es\": 198,\n\t\"./es-do\": 199,\n\t\"./es-do.js\": 199,\n\t\"./es-mx\": 200,\n\t\"./es-mx.js\": 200,\n\t\"./es-us\": 201,\n\t\"./es-us.js\": 201,\n\t\"./es.js\": 198,\n\t\"./et\": 202,\n\t\"./et.js\": 202,\n\t\"./eu\": 203,\n\t\"./eu.js\": 203,\n\t\"./fa\": 204,\n\t\"./fa.js\": 204,\n\t\"./fi\": 205,\n\t\"./fi.js\": 205,\n\t\"./fil\": 206,\n\t\"./fil.js\": 206,\n\t\"./fo\": 207,\n\t\"./fo.js\": 207,\n\t\"./fr\": 208,\n\t\"./fr-ca\": 209,\n\t\"./fr-ca.js\": 209,\n\t\"./fr-ch\": 210,\n\t\"./fr-ch.js\": 210,\n\t\"./fr.js\": 208,\n\t\"./fy\": 211,\n\t\"./fy.js\": 211,\n\t\"./ga\": 212,\n\t\"./ga.js\": 212,\n\t\"./gd\": 213,\n\t\"./gd.js\": 213,\n\t\"./gl\": 214,\n\t\"./gl.js\": 214,\n\t\"./gom-deva\": 215,\n\t\"./gom-deva.js\": 215,\n\t\"./gom-latn\": 216,\n\t\"./gom-latn.js\": 216,\n\t\"./gu\": 217,\n\t\"./gu.js\": 217,\n\t\"./he\": 218,\n\t\"./he.js\": 218,\n\t\"./hi\": 219,\n\t\"./hi.js\": 219,\n\t\"./hr\": 220,\n\t\"./hr.js\": 220,\n\t\"./hu\": 221,\n\t\"./hu.js\": 221,\n\t\"./hy-am\": 222,\n\t\"./hy-am.js\": 222,\n\t\"./id\": 223,\n\t\"./id.js\": 223,\n\t\"./is\": 224,\n\t\"./is.js\": 224,\n\t\"./it\": 225,\n\t\"./it-ch\": 226,\n\t\"./it-ch.js\": 226,\n\t\"./it.js\": 225,\n\t\"./ja\": 227,\n\t\"./ja.js\": 227,\n\t\"./jv\": 228,\n\t\"./jv.js\": 228,\n\t\"./ka\": 229,\n\t\"./ka.js\": 229,\n\t\"./kk\": 230,\n\t\"./kk.js\": 230,\n\t\"./km\": 231,\n\t\"./km.js\": 231,\n\t\"./kn\": 232,\n\t\"./kn.js\": 232,\n\t\"./ko\": 233,\n\t\"./ko.js\": 233,\n\t\"./ku\": 234,\n\t\"./ku.js\": 234,\n\t\"./ky\": 235,\n\t\"./ky.js\": 235,\n\t\"./lb\": 236,\n\t\"./lb.js\": 236,\n\t\"./lo\": 237,\n\t\"./lo.js\": 237,\n\t\"./lt\": 238,\n\t\"./lt.js\": 238,\n\t\"./lv\": 239,\n\t\"./lv.js\": 239,\n\t\"./me\": 240,\n\t\"./me.js\": 240,\n\t\"./mi\": 241,\n\t\"./mi.js\": 241,\n\t\"./mk\": 242,\n\t\"./mk.js\": 242,\n\t\"./ml\": 243,\n\t\"./ml.js\": 243,\n\t\"./mn\": 244,\n\t\"./mn.js\": 244,\n\t\"./mr\": 245,\n\t\"./mr.js\": 245,\n\t\"./ms\": 246,\n\t\"./ms-my\": 247,\n\t\"./ms-my.js\": 247,\n\t\"./ms.js\": 246,\n\t\"./mt\": 248,\n\t\"./mt.js\": 248,\n\t\"./my\": 249,\n\t\"./my.js\": 249,\n\t\"./nb\": 250,\n\t\"./nb.js\": 250,\n\t\"./ne\": 251,\n\t\"./ne.js\": 251,\n\t\"./nl\": 252,\n\t\"./nl-be\": 253,\n\t\"./nl-be.js\": 253,\n\t\"./nl.js\": 252,\n\t\"./nn\": 254,\n\t\"./nn.js\": 254,\n\t\"./oc-lnc\": 255,\n\t\"./oc-lnc.js\": 255,\n\t\"./pa-in\": 256,\n\t\"./pa-in.js\": 256,\n\t\"./pl\": 257,\n\t\"./pl.js\": 257,\n\t\"./pt\": 258,\n\t\"./pt-br\": 259,\n\t\"./pt-br.js\": 259,\n\t\"./pt.js\": 258,\n\t\"./ro\": 260,\n\t\"./ro.js\": 260,\n\t\"./ru\": 261,\n\t\"./ru.js\": 261,\n\t\"./sd\": 262,\n\t\"./sd.js\": 262,\n\t\"./se\": 263,\n\t\"./se.js\": 263,\n\t\"./si\": 264,\n\t\"./si.js\": 264,\n\t\"./sk\": 265,\n\t\"./sk.js\": 265,\n\t\"./sl\": 266,\n\t\"./sl.js\": 266,\n\t\"./sq\": 267,\n\t\"./sq.js\": 267,\n\t\"./sr\": 268,\n\t\"./sr-cyrl\": 269,\n\t\"./sr-cyrl.js\": 269,\n\t\"./sr.js\": 268,\n\t\"./ss\": 270,\n\t\"./ss.js\": 270,\n\t\"./sv\": 271,\n\t\"./sv.js\": 271,\n\t\"./sw\": 272,\n\t\"./sw.js\": 272,\n\t\"./ta\": 273,\n\t\"./ta.js\": 273,\n\t\"./te\": 274,\n\t\"./te.js\": 274,\n\t\"./tet\": 275,\n\t\"./tet.js\": 275,\n\t\"./tg\": 276,\n\t\"./tg.js\": 276,\n\t\"./th\": 277,\n\t\"./th.js\": 277,\n\t\"./tk\": 278,\n\t\"./tk.js\": 278,\n\t\"./tl-ph\": 279,\n\t\"./tl-ph.js\": 279,\n\t\"./tlh\": 280,\n\t\"./tlh.js\": 280,\n\t\"./tr\": 281,\n\t\"./tr.js\": 281,\n\t\"./tzl\": 282,\n\t\"./tzl.js\": 282,\n\t\"./tzm\": 283,\n\t\"./tzm-latn\": 284,\n\t\"./tzm-latn.js\": 284,\n\t\"./tzm.js\": 283,\n\t\"./ug-cn\": 285,\n\t\"./ug-cn.js\": 285,\n\t\"./uk\": 286,\n\t\"./uk.js\": 286,\n\t\"./ur\": 287,\n\t\"./ur.js\": 287,\n\t\"./uz\": 288,\n\t\"./uz-latn\": 289,\n\t\"./uz-latn.js\": 289,\n\t\"./uz.js\": 288,\n\t\"./vi\": 290,\n\t\"./vi.js\": 290,\n\t\"./x-pseudo\": 291,\n\t\"./x-pseudo.js\": 291,\n\t\"./yo\": 292,\n\t\"./yo.js\": 292,\n\t\"./zh-cn\": 293,\n\t\"./zh-cn.js\": 293,\n\t\"./zh-hk\": 294,\n\t\"./zh-hk.js\": 294,\n\t\"./zh-mo\": 295,\n\t\"./zh-mo.js\": 295,\n\t\"./zh-tw\": 296,\n\t\"./zh-tw.js\": 296\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 477;","import { Models } from 'app/models';\r\n\r\nexport const assetsPath: string =  '../../assets';\r\nexport interface Icon { [key: string]: JSX.Element; }\r\n\r\nexport enum Statistics {\r\n\tCONFIRMED = 'confirmed',\r\n\tRECOVERED = 'recovered',\r\n\tDEATHS = 'deaths'\r\n}\r\n\r\nexport enum ActionTypes {\r\n\tGET_STATISTICS_REQUEST = 'GET_STATISTICS_REQUEST',\r\n\tGET_STATISTICS_SUCCESS = 'GET_STATISTICS_SUCCESS',\r\n\tGET_STATISTICS_FAILED = 'GET_STATISTICS_FAILED',\r\n\r\n\tSET_GLOBAL_STATISTICS = 'SET_GLOBAL_STATISTICS',\r\n\tSET_COUNTRY_STATISTICS = 'SET_COUNTRY_STATISTICS',\r\n\r\n\tGET_COUNTRIES_REQUEST = 'GET_COUNTRIES_REQUEST',\r\n\tGET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS',\r\n\tGET_COUNTRIES_FAILED = 'GET_COUNTRIES_FAILED',\r\n\r\n\tGET_DAILY_REQUEST = 'GET_DAILY_REQUEST',\r\n\tGET_DAILY_SUCCESS = 'GET_DAILY_SUCCESS',\r\n\tGET_DAILY_FAILED = 'GET_DAILY_FAILED'\r\n}\r\n\r\nexport const endPoint: Models.EndPoint = {\r\n\turl: 'https://robincanlas-covid19-service.onrender.com/covid19',\r\n};\r\n\r\nexport const CONSTANTS = {\r\n\tcovid19Endpoint: 'https://robincanlas-covid19-service.onrender.com/covid19/list/jhucsse',\r\n\tmapboxAccessToken: 'pk.eyJ1IjoicnVrYmluMDExIiwiYSI6ImNrYWdrbDI3bTA5NzgyeHBuaWkzbWIxeDQifQ.C7KY2elb_bs0qrST3HvSSQ',\r\n\tmapboxStyle: 'mapbox://styles/rukbin011/ckagtrcc110de1ipt2pzqqn5v'\r\n};\r\n\r\nexport const constructFlag = (countryISO: string, className: string): string => {\r\n\treturn Boolean(countryISO)\r\n\t? `<img class=${className} src=\"https://disease.sh/assets/img/flags/${countryISO.toLowerCase()}.png\"></img>`\r\n\t: '';\r\n};\r\n\r\nexport const paintProperties = (highestCases: number, casesSample: number[]): any => {\r\n\treturn {\r\n\t\t'circle-opacity': 0.75,\r\n\t\t'circle-stroke-width': [\r\n\t\t\t'interpolate',\r\n\t\t\t['linear'],\r\n\t\t\t['get', 'cases'],\r\n\t\t\t1, 1,\r\n\t\t\thighestCases, 1.75,\r\n\t\t],\r\n\t\t'circle-radius': [\r\n\t\t\t'interpolate',\r\n\t\t\t['linear'],\r\n\t\t\t['get', 'cases'],\r\n\t\t\t1, 4,\r\n\t\t\t1000, 6,\r\n\t\t\t4000, 8,\r\n\t\t\t8000, 10,\r\n\t\t\t12000, 15,\r\n\t\t\tcasesSample[0], 24,\r\n\t\t\tcasesSample[1], 28,\r\n\t\t\tcasesSample[2], 32,\r\n\t\t\tcasesSample[3], 36,\r\n\t\t\tcasesSample[4], 40,\r\n\t\t\tcasesSample[5], 44,\r\n\t\t\thighestCases, 48\r\n\t\t],\r\n\t\t'circle-color': [\r\n\t\t\t'interpolate',\r\n\t\t\t['linear'],\r\n\t\t\t['get', 'cases'],\r\n\t\t\t1, '#ffffb2',\r\n\t\t\t5000, '#fed976',\r\n\t\t\t10000, '#feb24c',\r\n\t\t\t25000, '#fd8d3c',\r\n\t\t\t50000, '#fc4e2a',\r\n\t\t\t75000, '#e31a1c',\r\n\t\t\thighestCases, '#b10026'\r\n\t\t],\r\n\t};\r\n};","import { AnyAction } from 'redux';\r\nimport { createAction } from 'redux-actions';\r\nimport { ActionTypes } from 'app/constants';\r\nimport axios from 'axios';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\n\r\ntype Thunk = ThunkAction<void, {}, {}, AnyAction>;\r\n\r\nexport namespace StatisticsActions {\r\n\texport const getStats = (endPoint: string, country: string): Thunk => {\r\n\t\tconst request = createAction<{country: string}>(ActionTypes.GET_STATISTICS_REQUEST);\r\n\t\tconst success = createAction<any>(ActionTypes.GET_STATISTICS_SUCCESS);\r\n\t\tconst failure = createAction<any>(ActionTypes.GET_STATISTICS_FAILED);\r\n\t\t\r\n\t\treturn (dispatch: ThunkDispatch<{}, {}, AnyAction>): void => {\r\n\t\t\tdispatch(request({ country: country }));\r\n\t\t\taxios.get(endPoint)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tdispatch(success(response.data));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tdispatch(failure(error.data));\r\n\t\t\t\t});\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport type StatisticsActions = typeof StatisticsActions;","import { AnyAction } from 'redux';\r\nimport { createAction } from 'redux-actions';\r\nimport { ActionTypes, endPoint } from 'app/constants';\r\nimport axios from 'axios';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { Models } from 'app/models';\r\n// import { Models } from 'app/models';\r\n\r\ntype Thunk = ThunkAction<void, {}, {}, AnyAction>;\r\n\r\nexport namespace CountriesActions {\r\n\texport const getCountries = (): Thunk => {\r\n\t\tconst request = createAction(ActionTypes.GET_COUNTRIES_REQUEST);\r\n\t\tconst success = createAction<Models.Countries[]>(ActionTypes.GET_COUNTRIES_SUCCESS);\r\n\t\tconst failure = createAction<any>(ActionTypes.GET_COUNTRIES_FAILED);\r\n\t\t\r\n\t\treturn (dispatch: ThunkDispatch<{}, {}, AnyAction>): void => {\r\n\t\t\tdispatch(request());\r\n\t\t\taxios.get(`${endPoint.url}/countries`)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tdispatch(success(response.data));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tdispatch(failure(error.data));\r\n\t\t\t\t});\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport type CountriesActions = typeof CountriesActions;","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { Container, Card } from 'semantic-ui-react';\r\nimport { StatisticsActions } from 'app/store/statistic/actions';\r\nimport { RootState } from 'app/store';\r\nimport { Models } from 'app/models';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport CountUp from 'react-countup';\r\nimport { endPoint } from 'app/constants';\r\n\r\nexport namespace StatisticComponent {\r\n\texport interface Props {\r\n\t\tstatistics?: Models.Statistics[];\r\n\t\tlastUpdate?: string;\r\n\t\tisLoading?: boolean;\r\n\t\tactions?: StatisticsActions;\r\n\t}\r\n}\r\n\r\nconst StatisticComponent: React.FC<StatisticComponent.Props> = ({ \r\n\tstatistics = [], \r\n\tlastUpdate = '', \r\n\tisLoading = true, \r\n\tactions = StatisticsActions }: StatisticComponent.Props) => {\r\n\tReact.useEffect(() => {\r\n\t\tactions.getStats(`${endPoint.url}/all`, 'Global');\r\n\t}, []);\r\n\r\n\t// const [mode, setMode] = React.useState(localStorage.getItem('mode') || '');\r\n\t// React.useEffect(() => {\r\n\t// \tlocalStorage.setItem('mode', mode || '');\r\n\t// \tdocument.body.style.background = mode === 'dark' ? '#181f24' : 'white' ;\r\n\t// }, [mode]);\r\n\r\n\treturn (\r\n\t\t<Container id={style.container}>\r\n\t\t\t{/* {mode === 'dark' ?\r\n\t\t\t\t<Icon className={style.sun} name='sun outline' size='big' onClick={() => setMode('light')} /> :\r\n\t\t\t\t<Icon className={style.moon} name='moon' size='big' onClick={() => setMode('dark')} />\r\n\t\t\t} */}\r\n\t\t\t{/* <div className={`${style.title} ${mode === 'dark' ? style.light : ''}`}>COVID-19 TRACKER</div> */}\r\n\t\t\t<div className={style.title}>COVID-19 TRACKER</div>\r\n\t\t\t<div className={style.grid}>\r\n\t\t\t\t{statistics.map(element => (\r\n\t\t\t\t\t<Card className={style[element.name]} fluid key={element.name}>\r\n\t\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t\t<Card.Meta className={style.header}>{element.name}</Card.Meta>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t<CountUp \r\n\t\t\t\t\t\t\t\tstart={0} \r\n\t\t\t\t\t\t\t\tend={element.value}\r\n\t\t\t\t\t\t\t\tduration={2}\r\n\t\t\t\t\t\t\t\tseparator=',' />\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Meta>{lastUpdate}</Card.Meta>\r\n\t\t\t\t\t\t\t<Card.Description>\r\n\t\t\t\t\t\t\t\t{`Number of ${element.name} ${element.name === 'deaths' ? 'from' : 'cases from' } COVID-19`}\r\n\t\t\t\t\t\t\t</Card.Description>\r\n\t\t\t\t\t\t</Card.Content>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<StatisticComponent.Props, 'statistics' | 'lastUpdate' | 'isLoading'> => {\r\n\treturn {\r\n\t\tstatistics: state.statistic.statistics,\r\n\t\tlastUpdate: state.statistic.lastUpdate,\r\n\t\tisLoading: state.statistic.isLoading\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<StatisticComponent.Props, 'actions'> => ({\r\n\tactions: bindActionCreators(StatisticsActions, dispatch)\r\n});\r\n\r\nconst StatisticConnect = connect(mapStateToProps, mapDispatchToProps)(StatisticComponent);\r\nexport { StatisticConnect as Statistic };","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { Container, Dropdown, DropdownProps } from 'semantic-ui-react';\r\nimport { RootState } from 'app/store';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { StatisticsActions } from 'app/store/statistic/actions';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Models } from 'app/models';\r\nimport { CountriesActions } from 'app/store/countries/actions';\r\nimport { ActionTypes, Statistics } from 'app/constants';\r\n\r\nexport namespace CountryDropdown {\r\n\texport interface Props {\r\n\t\tlist?: Models.Countries[];\r\n\t\tcountriesPayload?: Models.CountriesPayload[];\r\n\t\tisLoading?: boolean;\r\n\t\tcountry?: string;\r\n\r\n\t\tstatsActions?: StatisticsActions;\r\n\t\tcountriesActions?: CountriesActions;\r\n\t}\r\n}\r\n\r\nconst CountryDropdown: React.FC<CountryDropdown.Props> = ({ \r\n\tlist = [], \r\n\tcountriesPayload = [],\r\n\tisLoading = true, \r\n\tcountry = 'Global',\r\n\tstatsActions = StatisticsActions, \r\n\tcountriesActions = CountriesActions }: CountryDropdown.Props) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tcountriesActions.getCountries();\r\n\t}, []);\r\n\r\n\tconst changeCountry = (event: React.SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\r\n\t\tif (data.value === 'Global') {\r\n\t\t\tdispatch({ type: ActionTypes.SET_GLOBAL_STATISTICS });\r\n\t\t} else {\r\n\t\t\tconst { cases, recovered, deaths, updated }: any = countriesPayload.find(element => element.country === data.value);\r\n\t\t\tconst statistics: Models.Statistics[] = [ \r\n\t\t\t\t{ value: cases, name: Statistics.CONFIRMED }, \r\n\t\t\t\t{ value: recovered, name: Statistics.RECOVERED }, \r\n\t\t\t\t{ value: deaths, name: Statistics.DEATHS } ];\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ActionTypes.SET_COUNTRY_STATISTICS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tcountry: data.value,\r\n\t\t\t\t\tstatistics: statistics,\r\n\t\t\t\t\tlastUpdate: new Date(updated).toDateString()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container id={style.container}>\r\n\t\t\t<Dropdown \r\n\t\t\t\tloading={isLoading}\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t\tclassName={style.dropdown}\r\n\t\t\t\tfluid\r\n\t\t\t\tsearch\r\n\t\t\t\tselection\r\n\t\t\t\t// defaultValue={country}\r\n\t\t\t\tvalue={country}\r\n\t\t\t\tonChange={changeCountry}\r\n\t\t\t\toptions={list} />\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<CountryDropdown.Props, 'list' | 'countriesPayload' | 'isLoading' | 'country'> => {\r\n\treturn {\r\n\t\tlist: state.countries.list,\r\n\t\tcountriesPayload: state.countries.countriesPayload,\r\n\t\tisLoading: state.countries.isLoading,\r\n\t\tcountry: state.statistic.country\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<CountryDropdown.Props, 'statsActions' | 'countriesActions'> => ({\r\n\tstatsActions: bindActionCreators(StatisticsActions, dispatch),\r\n\tcountriesActions: bindActionCreators(CountriesActions, dispatch)\r\n});\r\n\r\nconst CountryConnect = connect(mapStateToProps, mapDispatchToProps)(CountryDropdown);\r\nexport { CountryConnect as Countries };","import { AnyAction } from 'redux';\r\nimport { createAction } from 'redux-actions';\r\nimport { ActionTypes, endPoint } from 'app/constants';\r\nimport axios from 'axios';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { Models } from 'app/models';\r\n// import { Models } from 'app/models';\r\n\r\ntype Thunk = ThunkAction<void, {}, {}, AnyAction>;\r\n\r\nexport namespace ChartActions {\r\n\texport const getDaily = (country: string): Thunk => {\r\n\t\tconst isGlobal: boolean = country === 'Global';\r\n\t\tconst params: string = isGlobal ? 'all' : country;\r\n\t\tconst request = createAction(ActionTypes.GET_DAILY_REQUEST);\r\n\t\tconst success = createAction<Models.Countries[]>(ActionTypes.GET_DAILY_SUCCESS);\r\n\t\tconst failure = createAction<any>(ActionTypes.GET_DAILY_FAILED);\r\n\t\t\r\n\t\treturn (dispatch: ThunkDispatch<{}, {}, AnyAction>): void => {\r\n\t\t\tdispatch(request());\r\n\t\t\taxios.get(`${endPoint.url}/historical/${params}?lastdays=all`)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tdispatch(success(isGlobal ? response.data : response.data.timeline));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tdispatch(failure(error));\r\n\t\t\t\t});\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport type ChartActions = typeof ChartActions;","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { Container, Message } from 'semantic-ui-react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { RootState } from 'app/store';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { ChartActions } from 'app/store/chart/actions';\r\n\r\nnamespace Chart {\r\n\texport interface Props {\r\n\t\tdailyData?: any;\r\n\t\tisLoading?: boolean;\r\n\t\tcountry?: string;\r\n\t\terror?: string;\r\n\r\n\t\tactions?: ChartActions;\r\n\t}\r\n}\r\n\r\nexport const ChartComponent: React.FC<Chart.Props> = ({ \r\n\tdailyData = [], \r\n\tisLoading = true, \r\n\tcountry = 'Global',\r\n\terror = '', \r\n\tactions = ChartActions \r\n}: Chart.Props) => {\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (country) {\r\n\t\t\tactions.getDaily(country);\r\n\t\t}\r\n\t}, [country]);\r\n\t\r\n\tif (error) {\r\n\t\treturn (\r\n\t\t\t<Container id={style.container}>\r\n\t\t\t\t<Message negative className={style.error}>\r\n\t\t\t\t\t<Message.Header>No Historical Data.</Message.Header>\r\n\t\t\t\t</Message>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container id={style.container}>\r\n\t\t\t<Line\r\n\t\t\t\tdata={{\r\n\t\t\t\t\tlabels: dailyData.map(({ date }: { date: Date }) => date),\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tdata: dailyData.map((data: any) => data.confirmed),\r\n\t\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\t\tborderColor: '#59bcdc',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(173, 216, 230, 0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tdata: dailyData.map((data: any) => data.recovered),\r\n\t\t\t\t\t\tlabel: 'Recovered',\r\n\t\t\t\t\t\tborderColor: 'rgb(53, 255, 3)',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(53, 255, 3, 0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tdata: dailyData.map((data: any) => data.deaths),\r\n\t\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\t\tfill: true,\r\n\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t}}\t\t\t\t\t\r\n\t\t\t\toptions={{\r\n\t\t\t\t\t// title: { display: true, text: `Current state ${country === 'Global' ? 'of the World' : `in ${country}`}` },\r\n\t\t\t\t\ttitle: { display: true, text: `${country} Epidemic Curve` },\r\n\t\t\t\t\tanimation: {\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t\t\t\t\teasing: 'easeOutCubic'\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<Chart.Props, 'dailyData' | 'isLoading' | 'country' | 'error'> => {\r\n\treturn {\r\n\t\tdailyData: state.chart.dailyData,\r\n\t\tisLoading: state.chart.isLoading,\r\n\t\tcountry: state.statistic.country,\r\n\t\terror: state.chart.error\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<Chart.Props, 'actions'> => ({\r\n\tactions: bindActionCreators(ChartActions, dispatch),\r\n});\r\n\r\nconst ChartConnect = connect(mapStateToProps, mapDispatchToProps)(ChartComponent);\r\nexport { ChartConnect as Chart };","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { Models } from 'app/models';\r\nimport mapboxgl, { LngLatLike } from 'mapbox-gl';\r\nimport useSWR from 'swr'; // React hook to fetch the data\r\nimport lookup from 'country-code-lookup'; // npm module to get ISO Code for countries\r\nimport axios from 'axios';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\nimport { RootState } from 'app/store';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { ActionTypes, paintProperties, CONSTANTS, constructFlag } from 'app/constants';\r\n\r\n// Mapbox css - needed to make tooltips work later in this article\r\n// import 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nmapboxgl.accessToken = CONSTANTS.mapboxAccessToken;\r\n\r\nexport namespace Map {\r\n\texport interface Props {\r\n\t\tmapIsLoaded: () => void;\r\n\t}\r\n}\r\n\r\nexport const Map: React.FC<Map.Props> = (props: Map.Props) => {\r\n\tconst mapboxElRef = React.useRef(null); // DOM element to render map\r\n\tconst [mapState, setMap] = React.useState<mapboxgl.Map | null>(null);\r\n\tconst fetcher = (url: string) =>\r\n\t\taxios.get(url)\r\n\t\t\t.then(r => r.data)\r\n\t\t\t.then((country: Models.MapData[]) => {\r\n\t\t\t\tlocalStorage.setItem('updated', new Date().toString());\r\n\t\t\t\tconst features = country.filter(element => {\r\n\t\t\t\t\treturn element.coordinates.latitude !== ''; // removed no coordinates\r\n\t\t\t\t}).map((point, index) => (\r\n\t\t\t\t\t{\r\n\t\t\t\t\t'type': 'Feature' as const,\r\n\t\t\t\t\tgeometry: {\r\n\t\t\t\t\t\t'type': 'Point' as const,\r\n\t\t\t\t\t\tcoordinates: [\r\n\t\t\t\t\t\t\tpoint.coordinates.longitude,\r\n\t\t\t\t\t\t\tpoint.coordinates.latitude\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\t'id': index, // unique identifier in this case the index\r\n\t\t\t\t\t\t'country': point.country,\r\n\t\t\t\t\t\t'province': point.province,\r\n\t\t\t\t\t\t'cases': point.stats.confirmed,\r\n\t\t\t\t\t\t'deaths': point.stats.deaths,\r\n\t\t\t\t\t\t'recovered': point.stats.recovered,\r\n\t\t\t\t\t\t'updated': new Date(point.updatedAt).toDateString()\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tlocalStorage.setItem('data', JSON.stringify(features));\r\n\t\t\t\treturn features;\r\n\t\t\t});\r\n\t\t\r\n\tconst [shouldFetch, setShouldFetch] = React.useState<boolean>(false);\r\n\r\n\tReact.useEffect(() => {\r\n\t\t// FETCH ONLY IF THE LAST UPDATED TIME IS GREATER THAN 4\r\n\t\tif (localStorage.getItem('updated') && localStorage.getItem('data')) {\r\n\t\t\tif (Math.floor(Math.abs(new Date().getTime() - new Date(localStorage.getItem('updated') as string).getTime()) / 3600000) > 4) {\r\n\t\t\t\tsetShouldFetch(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetShouldFetch(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetShouldFetch(true);\r\n\t\t}\r\n\t}, []);\r\n\t\r\n\t// const { data } = useSWR(CONSTANTS.covid19Endpoint, fetcher);\r\n\tconst { data } = useSWR(shouldFetch ? CONSTANTS.covid19Endpoint : null, fetcher);\r\n\t\r\n\tconst constructMap = () => {\r\n\t\tconst covidData: any = data ? data : JSON.parse(localStorage.getItem('data') as string);\r\n\t\tif (covidData) {\r\n\t\t\tconst highestCases: number = Math.max.apply(Math, covidData.map((o: any) => { return o.properties.cases; }));\r\n\t\t\tconst interpolateCount: number = 7;\r\n\t\t\tconst incremental: number = Math.floor(highestCases / interpolateCount);\r\n\t\t\tlet casesSample: number[] = [];\r\n\t\t\tfor (let i = 1; i <= interpolateCount; i++) {\r\n\t\t\t\tcasesSample.push(i * incremental);\r\n\t\t\t}\r\n\r\n\t\t\t// You can store the map instance with useRef too\r\n\t\t\tconst map = new mapboxgl.Map({\r\n\t\t\t\tcontainer: mapboxElRef.current!,\r\n\t\t\t\tstyle: CONSTANTS.mapboxStyle,\r\n\t\t\t\tcenter: [121.76572,  13.01153], // initial geo location for Philippines\r\n\t\t\t\tzoom: 2 // initial zoom\r\n\t\t\t\t// zoom: 4.94 // initial zoom\r\n\t\t\t});\r\n\r\n\t\t\t// Add navigation controls to the top right of the canvas\r\n\t\t\tmap.addControl(new mapboxgl.NavigationControl());\r\n\r\n\t\t\t// Call this method when the map is loaded\r\n\t\t\tmap.once('load', function() {\r\n\t\t\t\t// Add our SOURCE\r\n\t\t\t\t// with id 'points'\r\n\t\t\t\tmap.addSource('points', {\r\n\t\t\t\t\ttype: 'geojson',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\ttype: 'FeatureCollection',\r\n\t\t\t\t\t\t// features: data as Feature<Geometry, GeoJsonProperties>[]\r\n\t\t\t\t\t\tfeatures: covidData as any // change later\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Add our layer\r\n\t\t\t\tmap.addLayer({\r\n\t\t\t\t\tid: 'circles',\r\n\t\t\t\t\tsource: 'points', // this should be the id of the source\r\n\t\t\t\t\ttype: 'circle',\r\n\t\t\t\t\t// paint properties\r\n\t\t\t\t\tpaint: paintProperties(highestCases, casesSample)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Create a mapbox popup\r\n\t\t\t\tconst popup = new mapboxgl.Popup({\r\n\t\t\t\t\tcloseButton: false,\r\n\t\t\t\t\tcloseOnClick: false\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetMap(map as any);\r\n\r\n\t\t\t\t// Variable to hold the active country/province on hover\r\n\t\t\t\tlet lastId: number | null;\r\n\r\n\t\t\t\t// Mouse move event\r\n\t\t\t\tmap.on('mousemove', 'circles', e => {\r\n\t\t\t\t\tif (e.features && e.features[0].properties && e.features[0].geometry.type === 'Point') {\r\n\t\t\t\t\t\t// Get the id from the properties\r\n\t\t\t\t\t\tconst id = e.features[0].properties.id;\r\n\r\n\t\t\t\t\t\t// Only if the id are different we process the tooltip\r\n\t\t\t\t\t\tif (id !== lastId) {\r\n\t\t\t\t\t\t\tlastId = id;\r\n\r\n\t\t\t\t\t\t\t// Change the pointer type on move move\r\n\t\t\t\t\t\t\tmap.getCanvas().style.cursor = 'pointer';\r\n\r\n\t\t\t\t\t\t\tconst { cases, deaths, country, province, updated }: any = e.features[0].properties;\r\n\t\t\t\t\t\t\tconst coordinates = e.features[0].geometry.coordinates!.slice();\r\n\r\n\t\t\t\t\t\t\t// Get all data for the tooltip\r\n\t\t\t\t\t\t\tconst countryISO = lookup.byCountry(country)?.iso2 || lookup.byInternet(country)?.iso2;\r\n\r\n\t\t\t\t\t\t\tconst provinceHTML = province !== 'null' ? `<p>Province: <b>${province}</b></p>` : '';\r\n\r\n\t\t\t\t\t\t\t// Calculate Mortality Rate\r\n\t\t\t\t\t\t\tconst mortalityRate: string = ((deaths / cases) * 100).toFixed(2);\r\n\r\n\t\t\t\t\t\t\t// Calculate Active Case\r\n\t\t\t\t\t\t\t// const activeCases: number = cases - (deaths + recovered);\r\n\t\t\t\t\t\t\t// <p class=${style.activeCases}>Active Cases: <b>${Number(activeCases).toLocaleString()}</b></p>\r\n\t\t\t\t\t\t\t// <p class=${style.recovered}>Recovered: <b>${Number(recovered).toLocaleString()}</b></p>\r\n\t\t\t\t\t\t\tconst countryFlagHTML = constructFlag(countryISO, style.flag);\r\n\r\n\t\t\t\t\t\t\t\tconst HTML = `<p>Country: <b>${country}</b></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t${provinceHTML}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p class=${style.cases}>Total Cases: <b>${Number(cases).toLocaleString()}</b></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p class=${style.deaths}>Deaths: <b>${Number(deaths).toLocaleString()}</b></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Mortality Rate: <b>${mortalityRate}%</b></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Updated: <b>${updated}</b></p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t${countryFlagHTML}`;\r\n\r\n\t\t\t\t\t\t\t// Ensure that if the map is zoomed out such that multiple\r\n\t\t\t\t\t\t\t// copies of the feature are visible, the popup appears\r\n\t\t\t\t\t\t\t// over the copy being pointed to.\r\n\t\t\t\t\t\t\twhile (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n\t\t\t\t\t\t\t\tcoordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpopup\r\n\t\t\t\t\t\t\t\t.setLngLat(coordinates as LngLatLike)\r\n\t\t\t\t\t\t\t\t.setHTML(HTML)\r\n\t\t\t\t\t\t\t\t.addTo(map);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Mouse leave event\r\n\t\t\t\tmap.on('mouseleave', 'circles', () => {\r\n\t\t\t\t\t// Reset the last Id\r\n\t\t\t\t\tlastId = null;\r\n\t\t\t\t\tmap.getCanvas().style.cursor = '';\r\n\t\t\t\t\tpopup.remove();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tprops.mapIsLoaded();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// Initialize our map\r\n\tReact.useEffect(() => {\r\n\t\tconstructMap();\r\n\t}, [data]);\r\n\r\n\tconst getCountry = (findCountry: string): string => {\r\n\t\tswitch (findCountry) {\r\n\t\t\tcase 'USA':\r\n\t\t\t\treturn 'US';\r\n\t\t\tcase 'UK':\r\n\t\t\t\treturn 'United Kingdom';\r\n\t\t\tdefault: return findCountry;\r\n\t\t}\r\n\t};\r\n\r\n\tconst filteredCountry: string = useSelector((state: RootState) => state.statistic.country, shallowEqual);\r\n\t// const countriesPayload: Models.CountriesPayload[] = useSelector((state: RootState) => state.countries.countriesPayload, shallowEqual);\r\n\tReact.useEffect(() => {\r\n\t\tif (mapState && filteredCountry) {\r\n\t\t\tlet\tfilter: any = null;\r\n\t\t\tif (filteredCountry !== 'Global') {\r\n\t\t\t\tconst newCountry: string = getCountry(filteredCountry);\r\n\t\t\t\tfilter = ['==', ['get', 'country'], newCountry];\r\n\t\t\t\tconst covidData: any = JSON.parse(localStorage.getItem('data') as string);\r\n\t\t\t\tconst country = covidData!.find((element: any) => element.properties.country === newCountry)!;\r\n\t\t\t\tif (country) {\r\n\t\t\t\t\tmapState.panTo([+country.geometry.coordinates[0], +country.geometry.coordinates[1]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tmapState.setFilter('circles', filter);\r\n\t\t}\r\n\t}, [filteredCountry, mapState]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst resetFilter = () => {\r\n\t\tif (mapState) {\r\n\t\t\t// mapState.setFilter('circles', null);\r\n\t\t\tdispatch({ type: ActionTypes.SET_GLOBAL_STATISTICS });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{filteredCountry !== 'Global' && <div onClick={resetFilter} className={style.repeat}>\r\n\t\t\t\t<Icon size='big' name='repeat' />\r\n\t\t\t</div>}\r\n\t\t\t<div id={style.map}>\r\n\t\t\t\t<div className={style.mapContainer}>\r\n\t\t\t\t\t{/* Assigned Mapbox container */}\r\n\t\t\t\t\t<div className={style.mapBox} ref={mapboxElRef} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};","import { \r\n\tcreateStore, \r\n\tcombineReducers, \r\n\tapplyMiddleware, \r\n\tStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { StatisticReducer } from './statistic/reducers';\r\nimport { StatisticsState } from './statistic/state';\r\nimport { CountriesReducer } from './countries/reducers';\r\nimport { CountriesState } from './countries/state';\r\nimport { ChartReducer } from './chart/reducers';\r\nimport { ChartState } from './chart/state';\r\n\r\nexport interface RootState {\r\n\tstatistic: StatisticsState;\r\n\tcountries: CountriesState;\r\n\tchart: ChartState;\r\n}\r\n\r\nexport const configureStore = (initialState?: RootState): Store<RootState> => {\r\n\tconst middleware = applyMiddleware(thunk); // <-- later check if production\r\n\tconst rootReducer = combineReducers<RootState>({\r\n\t\tstatistic: StatisticReducer as any,\r\n\t\tcountries: CountriesReducer as any,\r\n\t\tchart: ChartReducer as any\r\n\t});\r\n\r\n\tconst store = createStore(rootReducer, initialState as RootState, middleware);\r\n\r\n\treturn store;\r\n};\r\n\r\nexport * from './statistic/reducers';\r\nexport * from './countries/reducers';\r\nexport * from './chart/reducers';\r\n\r\n// store.subscribe(() => console.log(store.getState().photography));\r\n// // Dispatch some actions\r\n// store.dispatch(getPhotos());","import * as React from 'react';\r\nimport * as style from './style.css';\r\n\r\nexport const Loader: React.FC = () => {\r\n\treturn (\r\n\t\t<span id={style.loading}>\r\n\t\t\t{/* <div className={style.title}>\r\n\t\t\t\t<p>Covid-19 Updates</p>\r\n\t\t\t</div> */}\r\n\t\t\t<div className={style['sk-cube-grid']}>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube1']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube2']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube3']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube4']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube5']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube6']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube7']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube8']}`}></div>\r\n\t\t\t\t<div className={`${style['sk-cube']} ${style['sk-cube9']}`}></div>\r\n\t\t\t</div>\t\r\n\t\t\t<div className={style.copyright}>\r\n\t\t\t\t<p>© 2020, Coded by Kristoffer Robin Canlas</p>\r\n\t\t\t</div>\r\n\t\t</span>\r\n\t);\r\n};","import { initialState, StatisticsState } from '../state';\r\nimport { Models } from 'app/models';\r\nimport { handleActions } from 'redux-actions';\r\nimport { ActionTypes, Statistics } from 'app/constants';\r\n\r\ntype Payload = Models.Statistics | string | any;\r\n\r\nexport const StatisticReducer = handleActions<StatisticsState | Payload, Payload> (\r\n\t{\r\n\t\t[ActionTypes.GET_STATISTICS_REQUEST]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true,\r\n\t\t\t\tcountry: action.payload.country\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.GET_STATISTICS_SUCCESS]: (state, action) => {\r\n\t\t\tconst { cases, recovered, deaths, updated } = action.payload;\r\n\t\t\tconst statistics: any[] = [ \r\n\t\t\t\t{ value: cases, name: Statistics.CONFIRMED }, \r\n\t\t\t\t{ value: recovered, name: Statistics.RECOVERED }, \r\n\t\t\t\t{ value: deaths, name: Statistics.DEATHS } ];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tstatistics: statistics,\r\n\t\t\t\tglobal: statistics,\r\n\t\t\t\tlastUpdate: new Date(updated).toDateString()\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.GET_STATISTICS_FAILED]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terror: 'Error Fetching'\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.SET_GLOBAL_STATISTICS]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcountry: 'Global',\r\n\t\t\t\tstatistics: state.global\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.SET_COUNTRY_STATISTICS]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tinitialState\r\n);","import { Models } from 'app/models';\r\n\r\nexport const initialState = {\r\n\tstatistics: [],\r\n\tglobal: [],\r\n\tlastUpdate: '',\r\n\tcountry: '',\r\n\tisLoading: true,\r\n\terror: ''\r\n};\r\n\r\nexport type StatisticsState = {\r\n\tstatistics: Models.Statistics[];\r\n\tglobal: Models.Statistics[];\r\n\tlastUpdate: string;\r\n\tcountry: string,\r\n\tisLoading: boolean;\r\n\terror: string;\r\n};","import { Models } from 'app/models';\r\n\r\nexport const initialState = {\r\n\tlist: [\r\n\t\t{ key: 'Global', value: 'Global', text: 'Global', image: '' }\r\n\t],\r\n\tcountriesPayload: [],\r\n\tisLoading: true,\r\n\terror: ''\r\n};\r\n\r\nexport type CountriesState = {\r\n\tlist: Models.Countries[];\r\n\tcountriesPayload: Models.CountriesPayload[];\r\n\tisLoading: boolean;\r\n\terror: string;\r\n};","import { initialState, CountriesState } from '../state';\r\nimport { Models } from 'app/models';\r\nimport { handleActions } from 'redux-actions';\r\nimport { ActionTypes } from 'app/constants';\r\n\r\ntype Payload = Models.Countries[] | string | Models.CountriesPayload[];\r\n\r\nexport const CountriesReducer = handleActions<CountriesState, Payload> (\r\n\t{\r\n\t\t[ActionTypes.GET_COUNTRIES_REQUEST]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state as CountriesState,\r\n\t\t\t\tisLoading: true\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.GET_COUNTRIES_SUCCESS]: (state, action) => {\r\n\t\t\tconst list: any = initialState.list;\r\n\t\t\tconst payload: Models.CountriesPayload[] = action.payload as Models.CountriesPayload[];\r\n\t\t\tpayload.forEach((element: Models.CountriesPayload) => {\r\n\t\t\t\tlist.push({\r\n\t\t\t\t\ttext: element.country,\r\n\t\t\t\t\tkey: element.country,\r\n\t\t\t\t\tvalue: element.country,\r\n\t\t\t\t\timage: { avatar: false, src: element.countryInfo.flag },\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state as CountriesState,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tlist: list as Models.Countries[],\r\n\t\t\t\tcountriesPayload: payload\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.GET_COUNTRIES_FAILED]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state as CountriesState,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terror: 'Error Fetching'\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tinitialState\r\n);","import { initialState, ChartState } from '../state';\r\nimport { Models } from 'app/models';\r\nimport { handleActions } from 'redux-actions';\r\nimport { ActionTypes } from 'app/constants';\r\n\r\ntype Payload = Models.Chart[] | any;\r\n\r\nexport const ChartReducer = handleActions<ChartState | Payload, Payload> (\r\n\t{\r\n\t\t[ActionTypes.GET_DAILY_REQUEST]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: '',\r\n\t\t\t\tisLoading: true\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.GET_DAILY_SUCCESS]: (state, action) => {\r\n\t\t\tconst dailyData: Models.DailyData[] = Object.entries(action.payload.cases).map((element, index) => (\r\n\t\t\t\t{ \r\n\t\t\t\t\tdate: element[0], \r\n\t\t\t\t\tconfirmed: element[1], \r\n\t\t\t\t\tdeaths: Object.entries(action.payload.deaths)[index][1],\r\n\t\t\t\t\trecovered: Object.entries(action.payload.recovered)[index][1]\r\n\t\t\t\t} as Models.DailyData\r\n\t\t\t));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdailyData: dailyData\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ActionTypes.GET_DAILY_FAILED]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terror: 'Error Fetching'\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\tinitialState\r\n);","import { Models } from 'app/models';\r\n\r\nexport const initialState = {\r\n\tdailyData: [],\r\n\tisLoading: true,\r\n\terror: ''\r\n};\r\n\r\nexport type ChartState = {\r\n\tdailyData: Models.DailyData[],\r\n\tisLoading: boolean;\r\n\terror: string;\r\n};","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { App } from './app';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from 'app/store';\r\n\r\nimport 'normalize.css';\r\nimport './default.css';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { Map, Statistic, Countries, Chart, Loader } from 'app/components';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nexport const App: React.FC = () => {\r\n\tconst [sidebar, setSidebar] = React.useState(false);\r\n\tconst [isLoading, setIsLoading] = React.useState(true);\r\n\tconst sidebarRef = React.useRef<HTMLDivElement | null>(null);\r\n\r\n\tconst handleMousedown = (e: MouseEvent) => {\r\n\t\tif (sidebar && sidebarRef.current && !sidebarRef.current.contains(e.target as Node)) {\r\n\t\t\tsetSidebar(false);\r\n\t\t}\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\t// effect;\r\n\t\tdocument.addEventListener('mousedown', handleMousedown);\r\n\t\treturn() => {\r\n\t\t\tdocument.removeEventListener('mousedown', handleMousedown);\r\n\t\t};\r\n\t}, [sidebarRef, sidebar]);\r\n\r\n\tconst mapIsLoaded = () => {\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{isLoading && <Loader />}\r\n\t\t\t<span className={`${style.settings} ${sidebar ? style.hide : ''}`} onClick={() => setSidebar(true)}>\r\n\t\t\t\t<Icon name='settings' />\r\n\t\t\t</span>\r\n\t\t\t<Map mapIsLoaded={mapIsLoaded} />\r\n\t\t\t<div ref={sidebarRef} className={`${style.stats} ${sidebar ? style.show : ''}`}>\r\n\t\t\t\t<span className={style.settings} onClick={() => setSidebar(false)}>\r\n\t\t\t\t\t<Icon name='angle double up' />\r\n\t\t\t\t</span>\r\n\t\t\t\t<Statistic />\r\n\t\t\t\t<Countries />\r\n\t\t\t\t<Chart />\r\n\t\t\t\t<div className={style.copyright}>\r\n\t\t\t\t\t<p>© 2020, Coded by Kristoffer Robin Canlas</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2YU62\",\"sun\":\"_2f8c1\",\"moon\":\"_1tj14\",\"title\":\"-uahq\",\"light\":\"_3Ur7X\",\"grid\":\"_33Bri\",\"header\":\"_2drP7\",\"confirmed\":\"_1i7S5\",\"recovered\":\"_1Ry6v\",\"deaths\":\"_3aqUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3o4o_\",\"error\":\"_2dNMr\"};"],"sourceRoot":""}