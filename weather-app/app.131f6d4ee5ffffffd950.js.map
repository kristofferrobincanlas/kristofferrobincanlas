{"version":3,"sources":["webpack:///./app/components/SearchResults/style.css?4cfa","webpack:///./app/components/SearchInput/style.css?a18b","webpack:///./app/components/Search/style.css?540f","webpack:///./app/components/SearchInputMobile/style.css?794d","webpack:///./app/types/Content.tsx","webpack:///./app/types/Http.tsx","webpack:///./app/lib/auth/index.tsx","webpack:///./app/stores/country/actions/index.ts","webpack:///./app/lib/api/index.tsx","webpack:///./app/lib/urls/index.tsx","webpack:///./app/lib/form/index.tsx","webpack:///./app/services/CountryResource/index.ts","webpack:///./app/stores/country/state.ts","webpack:///./app/stores/country/reducers/index.ts","webpack:///./app/middlewares/logger.ts","webpack:///./app/components/WindyMap/index.tsx","webpack:///./app/utils/index.ts","webpack:///./app/components/SearchInput/index.tsx","webpack:///./app/components/SearchInputMobile/index.tsx","webpack:///./app/components/SearchResults/index.tsx","webpack:///./app/components/Search/index.tsx","webpack:///./app/components/Input/index.tsx","webpack:///./app/pages/HomePage/index.tsx","webpack:///./app/index.tsx","webpack:///./index.tsx","webpack:///./app/stores/index.ts","webpack:///./app/components/WindyMap/style.css?3d1b","webpack:///./app/secrets.ts"],"names":["module","exports","ContentTypes","HttpMethod","HttpStatus","CountryActions","Type","defaultHeaders","contentTypeMappings","JSON","resp","json","JS","XML","text","TEXT","CSV","HTML","JSON_2","DEFAULT_ENDPOINT_CONFIG","authenticated","endpointHeaders","GET","_makeMethod","POST","PUT","DELETE","PATCH","setDefaultHeader","key","value","method","hasBody","urlTemplate","endpointConfig","data","fetchConfig","result","url","match","tag","urlTag","slice","isNaN","parseInt","undefined","replace","encodeURIComponent","qs","indexOf","injectParameters","headers","Accept","body","FormData","asFormData","formData","Object","keys","forEach","append","toFormData","FORM_DATA","stringify","Authorization","Error","getAuthorizationHeader","_makeRequest","fetch","then","response","emit","status","contentType","get","console","log","mappingFunction","arrayBuffer","Promise","resolve","catch","err","reject","type","message","responseBody","ok","SERVER_ERROR","baseUrl","secrets","countryService","CountryResource","getCountries","name","request","createAction","GET_COUNTRIES_REQUEST","success","GET_COUNTRIES_SUCCESS","failure","GET_COUNTRIES_FAILURE","dispatch","countries","error","clearCountries","CLEAR_COUNTRIES","selectCountry","SELECT_COUNTRY","clearCountry","CLEAR_SELECTED_COUNTRY","index","countryReducer","handleActions","state","action","$set","isLoading","payload","country","logger","store","next","app","environment","WindyMap","windyMap","setWindyMap","indexPkg","window","options","verbose","lat","lon","zoom","latlon","dotAnimated","style","radarMarker","windyInit","windyAPI","map","windyLogo","document","getElementById","accumulations","display","on","e","latlng","lng","divIcon","L","iconSize","className","html","removeLayer","marker","icon","addLayer","addRadarMarker","latitude","longitude","panTo","animate","duration","setTimeout","popup","autoPan","setLatLng","setContent","country_code","continent","openOn","id","omit","target","reduce","res","omitKeys","includes","SearchInput","countryActions","setFocus","inputValue","setInputValue","search","searchInput","searchValue","isFocus","onClick","SearchInputMobile","mobileSearch","toggleMobileSearch","progressBar","SearchResults","opacity","length","select","label","Search","props","inputFocus","setInputFocus","setMobileSearch","focus","useInput","placeHolder","enterKey","setValue","onChange","onFocus","onBlur","onKeyUp","keyCode","placeholder","spellCheck","HomePage","context","render","initialState","middleware","rootReducer","configureStore","logLevel","process","env","APP_LOG_LEVEL","port","APP_PORT"],"mappings":"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","file":"app.131f6d4ee5ffffffd950.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-ul\":\"_2-Hw6\",\"header\":\"_2sDJP\",\"loading-container\":\"_1gBwD\",\"lds-ripple\":\"_3ish1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-input\":\"_361P6\",\"magnifying-glass\":\"_2_Dlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-section-container\":\"_2qCPL\",\"focus\":\"vF7L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"m-magnifying-glass\":\"zsznE\",\"m-search-header\":\"_2vBPE\",\"toggle\":\"_2eFCT\",\"m-search-input\":\"_2abAg\",\"m-search-icons\":\"hjKZb\",\"m-overlay\":\"_3_N7E\"};","export enum ContentTypes {\n\tXML = 'application/xml',\n\tJSON = 'application/json; charset=utf-8',\n\tJS = 'application/javascript',\n\tHTML = 'text/html',\n\tTEXT = 'text/plain',\n\tCSV = 'text/csv',\n\tFORM_DATA = 'multipart/form-data',\n\tJSON_2 = 'application/json;charset=utf-8',\n}\n","export enum HttpMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n}\n\nexport enum HttpStatus {\n  NOT_FOUND = 404,\n  SERVER_ERROR = 500,\n}\n","export const getAuthorizationHeader = () => {\n  throw new Error('Not implemented!');\n};\n","import * as _ from 'lodash';\nimport { AnyAction } from 'redux';\nimport { createAction } from 'redux-actions';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Country } from 'app/models';\nimport { CountryResource } from 'app/services';\n\ntype Thunk = ThunkAction<Promise<void>, {}, {}, AnyAction>;\n\nexport namespace CountryActions {\n  export enum Type {\n    GET_COUNTRIES_REQUEST = 'GET_COUNTRIES_REQUEST',\n    GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS',\n    GET_COUNTRIES_FAILURE = 'GET_COUNTRIES_FAILURE',\n\n    CLEAR_COUNTRIES = 'CLEAR_COUNTRIES',\n\n    SELECT_COUNTRY = 'SELECT_COUNTRY',\n    CLEAR_SELECTED_COUNTRY = 'CLEAR_SELECTED_COUNTRY',\n\n    TOGGLE_MOBILE_SEARCH = 'TOGGLE_MOBILE_SEARCH'\n  }\n\n  export const getCountries = (name: string): Thunk => {\n    const request = createAction(Type.GET_COUNTRIES_REQUEST);\n    const success = createAction<Country.Model[]>(Type.GET_COUNTRIES_SUCCESS);\n    const failure = createAction<string>(Type.GET_COUNTRIES_FAILURE);\n\n    return (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n      dispatch(request());\n      return CountryResource.getCountries({ name: name }).then(\n        (countries: Country.Model[]) => {\n          dispatch(success(countries));\n        },\n        (error: string) => {\n          dispatch(failure(error));\n        }\n      );\n    };\n  };\n\n  export const clearCountries = createAction(Type.CLEAR_COUNTRIES);\n  export const selectCountry = createAction<Country.Model>(Type.SELECT_COUNTRY);\n  export const clearCountry = createAction<Country.Model>(Type.CLEAR_SELECTED_COUNTRY);\n}\n\nexport type CountryActions = Omit<typeof CountryActions, 'Type'>;\n","import { EventEmitter } from 'events';\n\nimport {\n  EndpointConfig,\n  FetchApi,\n  FetchConfig,\n  ResourceFetch,\n  ResourceFetchTemplate,\n} from '../../types/Api';\nimport { ContentTypes } from '../../types/Content';\nimport { HttpMethod, HttpStatus } from '../../types/Http';\nimport { getAuthorizationHeader } from '../auth';\nimport { toFormData } from '../form';\nimport { injectParameters } from '../urls';\n\ntype Mappings = {\n  [contentType: string]: (resp: any) => any;\n};\n\nconst defaultHeaders: any = {};\n\nconst contentTypeMappings: Mappings = {\n  [ContentTypes.JSON]: resp => resp.json(),\n  [ContentTypes.JS]: resp => resp.json(),\n  [ContentTypes.XML]: resp => resp.text(),\n  [ContentTypes.TEXT]: resp => resp.text(),\n  [ContentTypes.CSV]: resp => resp.text(),\n  [ContentTypes.HTML]: resp => resp.text(),\n  [ContentTypes.JSON_2]: resp => resp.json(),\n};\n\nconst DEFAULT_ENDPOINT_CONFIG: EndpointConfig = {\n  authenticated: true,\n  endpointHeaders: {},\n};\n\nclass Api extends EventEmitter implements FetchApi {\n  public GET = this._makeMethod(HttpMethod.GET);\n  public POST = this._makeMethod(HttpMethod.POST, true);\n  public PUT = this._makeMethod(HttpMethod.PUT, true);\n  public DELETE = this._makeMethod(HttpMethod.DELETE);\n  public PATCH = this._makeMethod(HttpMethod.PATCH, true);\n\n  public setDefaultHeader = (key: string, value: string) => {\n    defaultHeaders[key] = value;\n  }\n\n  public _makeMethod(method: HttpMethod, hasBody: boolean = false): ResourceFetchTemplate<any, any> {\n    return (\n      urlTemplate: string,\n      endpointConfig: EndpointConfig = DEFAULT_ENDPOINT_CONFIG,\n    ): ResourceFetch<any, any> => {\n      return (data: any = undefined, fetchConfig: FetchConfig = {}): Promise<any> => {\n        const result: {url: string, data: any} = injectParameters(urlTemplate, data, hasBody);\n        const { authenticated, endpointHeaders } = endpointConfig;\n\n        const headers: any = {\n          Accept: ContentTypes.JSON,\n          ...defaultHeaders,\n          ...endpointHeaders,\n        };\n\n        let body = null;\n        if (hasBody && result.data) {\n          if (typeof result.data === 'string') {\n            body = result.data;\n            headers['Content-Type'] = ContentTypes.TEXT;\n          } else if (result.data instanceof FormData || fetchConfig.asFormData) {\n            body = toFormData(result.data);\n            headers['Content-Type'] = ContentTypes.FORM_DATA;\n          } else {\n            body = JSON.stringify(result.data);\n            headers['Content-Type'] = ContentTypes.JSON;\n          }\n        }\n\n        if (authenticated && !headers.Authorization) {\n          headers.Authorization = getAuthorizationHeader();\n        }\n\n        return this._makeRequest(method, result.url, headers, body);\n      };\n    };\n  }\n\n  public _makeRequest(\n    method: HttpMethod,\n    url: string,\n    headers: HeadersInit,\n    body: string | FormData | null,\n  ): Promise<any> {\n    return fetch(url, {\n      method,\n      headers,\n      body,\n    })\n      .then((response: any) => {\n        this.emit(`${response.status}`, url);\n        const contentType = response.headers.get('Content-Type');\n        console.log(contentType, 'content');\n        const mappingFunction = contentTypeMappings[contentType] || (resp => resp.arrayBuffer());\n\n        return new Promise(resolve => resolve(mappingFunction(response)))\n          .catch(err => {\n            Promise.reject({\n              type: 'NetworkError',\n              status: response.status,\n              message: err,\n            });\n          })\n          .then((responseBody: any) => {\n            if (response.ok) {\n              console.log(response, 'RESPONSEBODY');\n              return responseBody;\n            }\n\n            if (response.status >= HttpStatus.SERVER_ERROR) {\n              return Promise.reject({\n                type: 'ServerError',\n                status: response.status,\n                body: responseBody,\n              });\n            }\n            if (response.status < HttpStatus.SERVER_ERROR) {\n              return Promise.reject({\n                type: 'ApplicationError',\n                status: response.status,\n                body: responseBody,\n              });\n            }\n          });\n      })\n      .catch((err: any) => {\n        return err.type\n          ? Promise.reject(err)\n          : Promise.reject({\n              type: 'ConnectionRefused',\n              status: HttpStatus.SERVER_ERROR,\n              body: 'Check your internet connection',\n            });\n      });\n  }\n}\n\nconst instance = new Api();\n\nexport default instance;\n","import * as querystring from 'querystring';\n\n// This is used to replace the placeholders of the url with data(body)\nexport const injectParameters = (urlTemplate: string, data: any = {}, hasBody = true): {url: string, data: any} => {\n  let url = urlTemplate;\n\n  for (const tag of url.match(/:\\w+/g) || []) {\n    const urlTag = tag.slice(1);\n\n    // PORT :8000/...\n    if (!isNaN(parseInt(urlTag, 10))) {\n      delete data[urlTag];\n      continue;\n    }\n    let value = data[urlTag];\n    if (value === undefined) {\n      value = urlTag;\n    }\n    url = url.replace(tag, encodeURIComponent(value));\n\n    // Remove that tag from the body\n    delete data[urlTag];\n  }\n\n  if (!hasBody) {\n    const qs = querystring.stringify(data);\n    if (qs) {\n      url += (url.indexOf('?') >= 0 ? '&' : '?') + qs;\n    }\n  }\n\n  // Returning here the url and the updated body. This is needed because\n  // otherwise data would not be updated as it is passed by value\n  // It's a trade off to prevent sending a body with unwanted data in it\n  return {url, data};\n};\n","export const toFormData = (data: any): FormData => {\n  if (data instanceof FormData) {\n    return data;\n  }\n  const formData = new FormData();\n  Object.keys(data).forEach(key => formData.append(key, data[key]));\n  return formData;\n};\n","import api from 'app/lib/api';\nimport { Country } from 'app/models';\nimport secrets from 'app/secrets';\nimport { ResourceFetch } from 'app/types/Api';\n\nconst baseUrl: string = secrets.countryService || '';\n\nconst { GET } = api;\n\nexport interface CountryResource {\n  // ResourceFetch<Response, Payload>\n  getCountries: ResourceFetch<Country.Model[], PartialPick<Country.Model, 'name'>>;\n}\n\nexport const CountryResource: CountryResource = {\n  getCountries: GET(baseUrl + 'country/' + ':name', { authenticated: false })\n};","import { Country } from 'app/models';\n\nexport const initialState: CountryState = {\n  countries: [],\n  country: null,\n  isLoading: false,\n};\n\nfor (let index = 0; index < 10; index++) {\n  // initialState.countries.push(\n  //   {\n  //     'latitude': 9.866642,\n  //     'longitude': 126.043018,\n  //     'type': 'venue',\n  //     'name': 'Siargao Island',\n  //     'number': 0,\n  //     'postal_code': '',\n  //     'street': '',\n  //     'confidence': 1,\n  //     'region': 'Surigao del Norte',\n  //     'region_code': 'ST',\n  //     'county': 'Pilar',\n  //     'locality': '',\n  //     'administrative_area': '',\n  //     'neighbourhood': '',\n  //     'country': 'Philippines',\n  //     'country_code': 'PHL',\n  //     'continent': 'Asia',\n  //     'label': 'Siargao Island, ST, Philippines'},\n  // );\n}\n\nexport type CountryState = {\n  countries: Country.Model[];\n  country: Country.Model | null;\n  isLoading: boolean;\n};","import { handleActions } from 'redux-actions';\nimport { CountryActions } from './../actions';\nimport { Country } from 'app/models';\nimport { CountryState, initialState } from '../state';\nimport update from 'immutability-helper';\n\nexport const countryReducer = handleActions<CountryState, Country.Model[] & Country.Model>(\n  {\n    [CountryActions.Type.GET_COUNTRIES_REQUEST]: (state, action) => {\n      return update(state, {\n        countries: { $set: [] },\n        isLoading: { $set: true }\n      });\n    },\n    [CountryActions.Type.GET_COUNTRIES_SUCCESS]: (state, action) => {\n      // GET 10 results only\n      return update(state, {\n        countries: { $set: action.payload.slice(0, 9) },\n        isLoading: { $set: false }\n      });\n    },\n    [CountryActions.Type.GET_COUNTRIES_FAILURE]: (state, action) => {\n      return update(state, {\n        isLoading: { $set: false }\n      });\n    },\n    [CountryActions.Type.CLEAR_COUNTRIES]: (state, action) => {\n      return update(state, {\n        countries: { $set: [] }\n      });\n    },\n    [CountryActions.Type.SELECT_COUNTRY]: (state, action) => {\n      return update(state, {\n        country: { $set: action.payload }\n      });\n    }\n  },\n  initialState\n);\n","import secrets from '../secrets';\nimport { Middleware } from 'redux';\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n\tif (secrets.app.environment !== 'production') {\n\t\tconsole.log(action);\n\t}\n\treturn next(action);\n};\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { DivIcon, Marker } from 'leaflet';\nimport { connect } from 'react-redux';\nimport { RootState } from 'app/stores';\nimport { Country } from 'app/models';\n\nexport namespace _WindyMap {\n  export interface Props {\n    country?: Country.Model | null;\n  }\n  \n  export interface State {\n  }\n}\n\nexport const _WindyMap: React.FC<_WindyMap.Props> = ({\n  country = null\n}: _WindyMap.Props) => {\n  const [windyMap, setWindyMap] = React.useState<any>(null);\n  const indexPkg: any = window; \n  const windyApiKey: string = 'ocVsUGWwD1Ansc7fZYLYZaTJg6eBssHf';\n  const options = {\n    key: windyApiKey, \n    // Put additional console output\n    verbose: false,\n    // Optional: Initial state of the map\n    lat: 14.40,\n    lon: 121.03,\n    zoom: 5,\n    latlon: true\n  };\n  \n  const dotAnimated = `${style['pulsating-icon']} ${style.repeat}`;\n  let radarMarker: Marker | null = null;\n\n  const windyInit = (windyAPI: any) => {\n    // windyAPI is ready, and contain 'map', 'store',\n    // 'picker' and other usefull stuff\n\n    const { map } = windyAPI;\n    setWindyMap(map);\n\n    // setTimeout(() => {\n    //   picker.open({ \n    //     lat: 40.68295,\n    //     lon: -73.9708, \n    //   });\n    // }, 3000);\n\n    const windyLogo: HTMLElement | null = document.getElementById('logo-wrapper');\n    const accumulations: HTMLElement | null = document.getElementById('accumulations');\n    if (windyLogo) {\n      windyLogo.style.display = 'none';\n    }\n\n    if (accumulations) {\n      accumulations.style.display = 'none';\n    }\n  };\n\n  const addRadarMarker = (lat: number, lng: number) => {\n    const divIcon: DivIcon = indexPkg.L.divIcon(\n      {\n        iconSize: [10, 10],\n        className: `${style['icon-dot']}`,\n        html: `<div class=\"${dotAnimated}\"></div>`\n      });\n\n    if (radarMarker) {\n      windyMap.removeLayer(radarMarker);\n    }\n\n    radarMarker = indexPkg.L.marker([lat, lng], {\n      icon: divIcon\n    });\n    windyMap.addLayer(radarMarker);\n  };\n\n  React.useEffect(() => {\t\n    if (windyMap) {\n      // addRadarMarker(7.07306, 125.61278);\n      windyMap.on('click', (e: any) => {\n        const lat: number = e.latlng.lat;\n        const lng: number = e.latlng.lng;\n        console.log(e);\n        addRadarMarker(lat, lng);\n      });\n    }\n  }, [windyMap]);\n\n  React.useEffect(() => {\n    if (windyMap) {\n      if (country) {\n        let lat = country.latitude;\n        let lng = country.longitude;\n        windyMap\n          .panTo([lat, lng] , { animate: true, duration: 0.5 });\n\n        setTimeout(() => {\n          indexPkg.L.popup({ autoPan: true, className: style.popup })\n          .setLatLng([lat, lng])\n          .setContent(`\n          <div class='${style['popup-name']}'>${country.name}</div>\n          <div>${country.country}, ${country.country_code}</div>\n          <div>${country.continent}</div>\n          <div>Lat: ${country.latitude}</div>\n          <div>Long: ${country.longitude}</div>\n          `)\n          .openOn(windyMap);\n        }, 1500);\n      }\n    }\n  }, [windyMap, country]);\n\n  React.useEffect(() => {\n    indexPkg.windyInit(options, windyInit);\n  }, []);\n\n  return <div id='windy' className={style.windy} />;\n};\n\nconst mapStateToProps = (state: RootState): Pick<_WindyMap.Props, 'country'> => {\n  return {\n    country: state.country.country,\n  };\n};\n\nexport const WindyMap: React.FC<_WindyMap.Props> = connect(\n  mapStateToProps,\n  null\n)(_WindyMap);","// import { createBrowserHistory } from 'history';\n\nexport function omit<T extends object, K extends keyof T>(target: T, ...omitKeys: K[]): Omit<T, K> {\n\treturn (Object.keys(target) as K[]).reduce(\n\t\t(res, key) => {\n\t\t\tif (!omitKeys.includes(key)) {\n\t\t\t\tres[key] = target[key];\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t{} as any\n\t);\n}\n\n// export const history = createBrowserHistory();\n","import * as React from 'react';\nimport * as style from './style.css';\nimport { RootState } from 'app/stores';\nimport { CountryActions } from 'app/stores/country/actions';\nimport { omit } from 'app/utils';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { useInput } from 'app/components';\nimport { Country } from 'app/models';\n\nexport namespace _SearchInput {\n  export interface Props {\n    countries?: Country.Model[];\n    isLoading?: boolean;\n\n    countryActions?: CountryActions;\n    setFocus: (focus: boolean) => void;\n  }\n}\n\nexport const _SearchInput: React.FC<_SearchInput.Props> = ({\n  countries = [],\n  isLoading = false,\n\n  countryActions = CountryActions,\n  setFocus = () => { return; }\n }) => {\n  const [inputValue, setInputValue] = React.useState<string>('');\n  \n  const search = () => {\n    if (inputValue === '') return;\n    countryActions.getCountries(inputValue);\n  };\n\n  const enterKey = () => {\n    search();\n  };\n\n  const [searchInput, searchValue, isFocus] = useInput({ \n    type: 'text', \n    className: style['search-input'], \n    placeHolder: 'Search for country or city',\n    enterKey: enterKey });\n\n  React.useEffect(() => {\n    setInputValue(searchValue);\n  }, [searchValue]);\n\n  React.useEffect(() => {\n    setFocus(isFocus);\n  }, [isFocus]);\n\n  return (\n    <>\n      {searchInput}\n      {isLoading ? null : <div onClick={search} className={style['magnifying-glass']} />}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): Pick<_SearchInput.Props, 'countries' | 'isLoading'> => {\n  return {\n    countries: state.country.countries,\n    isLoading: state.country.isLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<_SearchInput.Props, 'countryActions'> => ({\n  countryActions: bindActionCreators(omit(CountryActions, 'Type'), dispatch)\n});\n\nexport const SearchInput: React.FC<_SearchInput.Props> = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_SearchInput);","import * as React from 'react';\nimport * as style from './style.css';\nimport { RootState } from 'app/stores';\nimport { CountryActions } from 'app/stores/country/actions';\nimport { omit } from 'app/utils';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { useInput } from 'app/components';\nimport { Country } from 'app/models';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport namespace _SearchInputMobile {\n  export interface Props {\n    mobileSearch: boolean;\n    countries?: Country.Model[];\n    isLoading?: boolean;\n\n    toggleMobileSearch: () => void;\n    countryActions?: CountryActions;\n  }\n}\n\nexport const _SearchInputMobile: React.FC<_SearchInputMobile.Props> = ({\n  mobileSearch = false,\n  countries = [],\n  isLoading = false,\n\n  toggleMobileSearch = () => { return null; },\n  countryActions = CountryActions,\n }) => {\n  const [inputValue, setInputValue] = React.useState<string>('');\n  \n  const search = () => {\n    if (inputValue === '') return;\n    countryActions.getCountries(inputValue);\n  };\n\n  const enterKey = () => {\n    search();\n  };\n\n  const [searchInput, searchValue] = useInput({ \n    type: 'text', \n    className: style['m-search-input'], \n    placeHolder: 'Search for country or city',\n    enterKey: enterKey });\n\n  React.useEffect(() => {\n    setInputValue(searchValue);\n  }, [searchValue]);\n\n  React.useEffect(() => {\n    const progressBar: HTMLElement | null = document.getElementById('progress-bar');\n    if (progressBar) {\n      if (mobileSearch) {\n        progressBar.style.display = 'none';\n      } else {\n        progressBar.style.display = 'block';\n      }\n    }\n  }, [mobileSearch]);\n\n  const clickMagnifying = () => {\n    search();\n  };\n\n  const close = () => {\n    toggleMobileSearch();\n    countryActions.clearCountries();\n  };\n\n  return (\n    <>\n      <div className={`${style['m-search-header']} ${mobileSearch ? style.toggle : ''}`}>\n        <FontAwesomeIcon icon={faSearch} className={style['m-search-icons']} onClick={clickMagnifying} />\n        {searchInput}\n        <FontAwesomeIcon icon={faTimes} className={style['m-search-icons']} onClick={close} />\n      </div>\n      {mobileSearch ? null : <FontAwesomeIcon onClick={toggleMobileSearch} className={style['m-magnifying-glass']} icon={faSearch} /> }\n      <div className={`${style['m-overlay']} ${mobileSearch ? style.toggle : ''}`}></div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState): Pick<_SearchInputMobile.Props, 'countries' | 'isLoading'> => {\n  return {\n    countries: state.country.countries,\n    isLoading: state.country.isLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<_SearchInputMobile.Props, 'countryActions'> => ({\n  countryActions: bindActionCreators(omit(CountryActions, 'Type'), dispatch)\n});\n\nexport const SearchInputMobile: React.FC<_SearchInputMobile.Props> = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_SearchInputMobile);","import * as React from 'react';\nimport * as style from './style.css';\nimport { RootState } from 'app/stores';\nimport { connect } from 'react-redux';\nimport { Country } from 'app/models';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { omit } from 'app/utils';\nimport { CountryActions } from 'app/stores/country/actions';\n\nexport namespace _SearchResults {\n  export interface Props {\n    countries?: Country.Model[];\n    isLoading?: boolean;\n\n    toggleMobileSearch: () => void;\n    countryActions?: CountryActions;\n  }\n}\n\nexport const _SearchResults: React.FC<_SearchResults.Props> = ({\n  countries = [],\n  isLoading = false, \n\n  toggleMobileSearch = () => { return null; },\n  countryActions = CountryActions,\n }) => {\n  // const [showList, setShowList] = React.useState<boolean>(false);\n\n  // React.useEffect(() => {\n  //   console.log(countries, '########## search');\n  // }, [countries]);\n\n  const select = (country: Country.Model) => {\n    countryActions.clearCountries();\n    countryActions.selectCountry(country);\n    toggleMobileSearch();\n  };\n\n  const getList = (): JSX.Element => {\n    let opacity: number = 1;\n    return (\n      <>\n        <ul className={style['search-ul']}>\n          {countries.map(country => ( \n            <li onClick={() => select(country)} key={country.latitude} style={{'opacity': opacity -= .07}}>\n              <div>\n                <span>{country.name}</span>\n                <span>{country.label}</span>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n  const getLoading = () => {\n    return (\n      <>\n        <div className={style['loading-container']}>\n          <div className={style['lds-ripple']}>\n            <div />\n            <div />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  if (isLoading) {\n    return getLoading();\n  }\n\n  if (countries.length === 0) {\n    return null;\n  }\n\n  return getList();\n};\n\nconst mapStateToProps = (state: RootState): Pick<_SearchResults.Props, 'countries' | 'isLoading'> => {\n  return {\n    countries: state.country.countries,\n    isLoading: state.country.isLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<_SearchResults.Props, 'countryActions'> => ({\n  countryActions: bindActionCreators(omit(CountryActions, 'Type'), dispatch)\n});\n\nexport const SearchResults: React.FC<_SearchResults.Props> = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_SearchResults);","import * as React from 'react';\nimport * as style from './style.css';\nimport { SearchInput, SearchResults } from 'app/components';\nimport { SearchInputMobile } from '../SearchInputMobile';\n\nexport namespace Search {\n  export interface Props {\n  }\n  export interface State {\n\n  }\n}\n\nexport const Search: React.FC<Search.Props> = (props: Search.Props) => {\n  const [inputFocus, setInputFocus] = React.useState<boolean>(false);\n  const [mobileSearch, setMobileSearch] = React.useState<boolean>(false);\n\n  const setFocus = (focus: boolean) => {\n    setInputFocus(focus);\n  };\n\n  const toggleMobileSearch = () => {\n    setMobileSearch(!mobileSearch);\n  };\n\n  return (\n    <>\n      <SearchInputMobile mobileSearch={mobileSearch} toggleMobileSearch={toggleMobileSearch} />\n      <div className={`${style['search-section-container']} ${inputFocus ? style.focus : '' }`}>\n        <SearchInput setFocus={setFocus} />\n      </div>\n      <SearchResults toggleMobileSearch={toggleMobileSearch} />\n    </>\n  );\n};\n","import * as React from 'react';\n\nexport namespace useInput {\n  export interface Props {\n    type: string;\n    className: string;\n    placeHolder: string;\n    enterKey: () => void;\n  }\n}\n\n export const useInput = ({ type, className, placeHolder, enterKey }: useInput.Props): [JSX.Element, string, boolean] => {\n  const [value, setValue] = React.useState<string>('');\n  const [focus, setFocus] = React.useState<boolean>(false);\n\n  const onKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' || e.keyCode === 13) {\n      enterKey();\n    }\n  };\n\n  const input = <input \n    value={value} \n    onChange={e => setValue(e.target.value)} \n    onFocus={e => setFocus(true)}\n    onBlur={e => setFocus(false)}\n    onKeyUp={e => onKeyUp(e)}\n    type={type} \n    className={className}\n    placeholder={placeHolder} \n    spellCheck='false'\n  />;\n  return [input, value, focus];\n};","import * as React from 'react';\nimport { Search, WindyMap } from 'app/components';\n\nexport namespace HomePage {\n  export interface Props {\n  }\n  export interface State {\n  }\n}\n\nexport const HomePage: React.FC<HomePage.Props> = (props: HomePage.Props) => {\n  return (\n    <>\n      <Search />  \n      {false ? null : <WindyMap />}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { HomePage } from 'app/pages';\n\nexport namespace App {\n\texport interface Props {\n\n\t}\n\n\texport interface State {\n\n\t}\n}\n\nexport class App extends React.Component<App.Props, App.State> {\n\tconstructor(props: App.Props, context?: any) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {};\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<HomePage />\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { configureStore } from './app/stores';\nimport { Provider } from 'react-redux';\nimport { App } from './app';\n\nimport 'normalize.css';\nimport './default.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);","import secrets from 'app/secrets';\nimport thunk from 'redux-thunk';\nimport { countryReducer } from './country/reducers';\nimport { CountryState } from './country/state';\nimport {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n  Store\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { logger } from 'app/middlewares';\nimport { ReduxCompatibleReducer } from 'redux-actions';\nimport { Country } from 'app/models';\n\nexport interface RootState {\n  country: CountryState;\n  router?: any;\n}\n\nexport function configureStore(initialState?: RootState): Store<RootState> {\n  let middleware = applyMiddleware(logger, thunk);\n\n  if (secrets.app.environment !== 'production') {\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const rootReducer = combineReducers<RootState>({\n    country: countryReducer as ReduxCompatibleReducer<CountryState, Country.Model[]>\n  });\n\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<\n    RootState\n  >;\n\n  if (module.hot) {\n    module.hot.accept('app/stores', () => {\n      const nextReducer = require('app/stores');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n\nexport * from './country/reducers';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windy\":\"_3F23W\",\"icon-dot\":\"ru-Z8\",\"pulsating-icon\":\"_2lpRt\",\"pulsate\":\"_38Zl-\",\"repeat\":\"_11h4g\",\"popup-name\":\"_2sUBN\",\"pulsate-opacity\":\"_2AORO\"};","export default {\n  app: {\n    environment: typeof process.env.NODE_ENV !== undefined\n      ? process.env.NODE_ENV\n      : 'production',\n    logLevel: process.env.APP_LOG_LEVEL,\n    port: process.env.APP_PORT || 8001\n  },\n  countryService: process.env.COUNTRY_SERVICE\n};\n"],"sourceRoot":""}