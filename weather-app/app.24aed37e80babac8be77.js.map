{"version":3,"sources":["webpack:///./app/components/SearchResults/style.css?4cfa","webpack:///./app/components/SearchInput/style.css?a18b","webpack:///./app/components/Search/style.css?540f","webpack:///./app/components/SearchInputMobile/style.css?794d","webpack:///./app/types/Content.tsx","webpack:///./app/types/Http.tsx","webpack:///./app/lib/auth/index.tsx","webpack:///./app/stores/country/actions/index.ts","webpack:///./app/lib/api/index.tsx","webpack:///./app/lib/urls/index.tsx","webpack:///./app/lib/form/index.tsx","webpack:///./app/services/CountryResource/index.ts","webpack:///./app/stores/country/state.ts","webpack:///./app/stores/country/reducers/index.ts","webpack:///./app/middlewares/logger.ts","webpack:///./app/components/WindyMap/index.tsx","webpack:///./app/utils/index.ts","webpack:///./app/components/SearchInput/index.tsx","webpack:///./app/components/SearchInputMobile/index.tsx","webpack:///./app/components/SearchResults/index.tsx","webpack:///./app/components/Search/index.tsx","webpack:///./app/components/Input/index.tsx","webpack:///./app/pages/HomePage/index.tsx","webpack:///./app/index.tsx","webpack:///./index.tsx","webpack:///./app/stores/index.ts","webpack:///./app/components/WindyMap/style.css?3d1b","webpack:///./app/secrets.ts"],"names":["module","exports","ContentTypes","HttpMethod","HttpStatus","CountryActions","Type","defaultHeaders","contentTypeMappings","JSON","resp","json","JS","XML","text","TEXT","CSV","HTML","JSON_2","DEFAULT_ENDPOINT_CONFIG","authenticated","endpointHeaders","GET","_makeMethod","POST","PUT","DELETE","PATCH","setDefaultHeader","key","value","method","hasBody","urlTemplate","endpointConfig","data","fetchConfig","result","url","match","tag","urlTag","slice","isNaN","parseInt","undefined","replace","encodeURIComponent","qs","indexOf","injectParameters","headers","Accept","body","FormData","asFormData","formData","Object","keys","forEach","append","toFormData","FORM_DATA","stringify","Authorization","Error","getAuthorizationHeader","_makeRequest","fetch","then","response","emit","status","contentType","get","console","log","mappingFunction","arrayBuffer","Promise","resolve","catch","err","reject","type","message","responseBody","ok","SERVER_ERROR","baseUrl","secrets","countryService","CountryResource","getCountries","name","request","createAction","GET_COUNTRIES_REQUEST","success","GET_COUNTRIES_SUCCESS","failure","GET_COUNTRIES_FAILURE","dispatch","countries","error","clearCountries","CLEAR_COUNTRIES","selectCountry","SELECT_COUNTRY","clearCountry","CLEAR_SELECTED_COUNTRY","index","countryReducer","handleActions","state","action","$set","isLoading","payload","country","logger","store","next","app","environment","WindyMap","windyMap","setWindyMap","indexPkg","window","options","verbose","lat","lon","zoom","latlon","dotAnimated","style","radarMarker","windyInit","windyAPI","map","windyLogo","document","getElementById","accumulations","display","on","e","latlng","lng","divIcon","L","iconSize","className","html","removeLayer","marker","icon","addLayer","addRadarMarker","latitude","longitude","panTo","animate","duration","setTimeout","popup","autoPan","setLatLng","setContent","country_code","continent","openOn","id","omit","target","reduce","res","omitKeys","includes","SearchInput","countryActions","setFocus","inputValue","setInputValue","search","searchInput","searchValue","isFocus","onClick","SearchInputMobile","mobileSearch","toggleMobileSearch","progressBar","SearchResults","opacity","length","select","label","Search","props","inputFocus","setInputFocus","setMobileSearch","focus","useInput","placeHolder","enterKey","setValue","onChange","onFocus","onBlur","onKeyUp","keyCode","placeholder","spellCheck","HomePage","context","render","initialState","middleware","rootReducer","configureStore","logLevel","process","env","APP_LOG_LEVEL","port","APP_PORT"],"mappings":"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","file":"app.24aed37e80babac8be77.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-ul\":\"_2-Hw6\",\"header\":\"_2sDJP\",\"loading-container\":\"_1gBwD\",\"lds-ripple\":\"_3ish1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-input\":\"_361P6\",\"magnifying-glass\":\"_2_Dlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-section-container\":\"_2qCPL\",\"focus\":\"vF7L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"m-magnifying-glass\":\"zsznE\",\"m-search-header\":\"_2vBPE\",\"toggle\":\"_2eFCT\",\"m-search-input\":\"_2abAg\",\"m-search-icons\":\"hjKZb\",\"m-overlay\":\"_3_N7E\"};","export enum ContentTypes {\r\n\tXML = 'application/xml',\r\n\tJSON = 'application/json; charset=utf-8',\r\n\tJS = 'application/javascript',\r\n\tHTML = 'text/html',\r\n\tTEXT = 'text/plain',\r\n\tCSV = 'text/csv',\r\n\tFORM_DATA = 'multipart/form-data',\r\n\tJSON_2 = 'application/json;charset=utf-8',\r\n}\r\n","export enum HttpMethod {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n  PUT = 'PUT',\r\n  DELETE = 'DELETE',\r\n  PATCH = 'PATCH',\r\n}\r\n\r\nexport enum HttpStatus {\r\n  NOT_FOUND = 404,\r\n  SERVER_ERROR = 500,\r\n}\r\n","export const getAuthorizationHeader = () => {\r\n  throw new Error('Not implemented!');\r\n};\r\n","import * as _ from 'lodash';\r\nimport { AnyAction } from 'redux';\r\nimport { createAction } from 'redux-actions';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { Country } from 'app/models';\r\nimport { CountryResource } from 'app/services';\r\n\r\ntype Thunk = ThunkAction<Promise<void>, {}, {}, AnyAction>;\r\n\r\nexport namespace CountryActions {\r\n  export enum Type {\r\n    GET_COUNTRIES_REQUEST = 'GET_COUNTRIES_REQUEST',\r\n    GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS',\r\n    GET_COUNTRIES_FAILURE = 'GET_COUNTRIES_FAILURE',\r\n\r\n    CLEAR_COUNTRIES = 'CLEAR_COUNTRIES',\r\n\r\n    SELECT_COUNTRY = 'SELECT_COUNTRY',\r\n    CLEAR_SELECTED_COUNTRY = 'CLEAR_SELECTED_COUNTRY',\r\n\r\n    TOGGLE_MOBILE_SEARCH = 'TOGGLE_MOBILE_SEARCH'\r\n  }\r\n\r\n  export const getCountries = (name: string): Thunk => {\r\n    const request = createAction(Type.GET_COUNTRIES_REQUEST);\r\n    const success = createAction<Country.Model[]>(Type.GET_COUNTRIES_SUCCESS);\r\n    const failure = createAction<string>(Type.GET_COUNTRIES_FAILURE);\r\n\r\n    return (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\r\n      dispatch(request());\r\n      return CountryResource.getCountries({ name: name }).then(\r\n        (countries: Country.Model[]) => {\r\n          dispatch(success(countries));\r\n        },\r\n        (error: string) => {\r\n          dispatch(failure(error));\r\n        }\r\n      );\r\n    };\r\n  };\r\n\r\n  export const clearCountries = createAction(Type.CLEAR_COUNTRIES);\r\n  export const selectCountry = createAction<Country.Model>(Type.SELECT_COUNTRY);\r\n  export const clearCountry = createAction<Country.Model>(Type.CLEAR_SELECTED_COUNTRY);\r\n}\r\n\r\nexport type CountryActions = Omit<typeof CountryActions, 'Type'>;\r\n","import { EventEmitter } from 'events';\r\n\r\nimport {\r\n  EndpointConfig,\r\n  FetchApi,\r\n  FetchConfig,\r\n  ResourceFetch,\r\n  ResourceFetchTemplate,\r\n} from '../../types/Api';\r\nimport { ContentTypes } from '../../types/Content';\r\nimport { HttpMethod, HttpStatus } from '../../types/Http';\r\nimport { getAuthorizationHeader } from '../auth';\r\nimport { toFormData } from '../form';\r\nimport { injectParameters } from '../urls';\r\n\r\ntype Mappings = {\r\n  [contentType: string]: (resp: any) => any;\r\n};\r\n\r\nconst defaultHeaders: any = {};\r\n\r\nconst contentTypeMappings: Mappings = {\r\n  [ContentTypes.JSON]: resp => resp.json(),\r\n  [ContentTypes.JS]: resp => resp.json(),\r\n  [ContentTypes.XML]: resp => resp.text(),\r\n  [ContentTypes.TEXT]: resp => resp.text(),\r\n  [ContentTypes.CSV]: resp => resp.text(),\r\n  [ContentTypes.HTML]: resp => resp.text(),\r\n  [ContentTypes.JSON_2]: resp => resp.json(),\r\n};\r\n\r\nconst DEFAULT_ENDPOINT_CONFIG: EndpointConfig = {\r\n  authenticated: true,\r\n  endpointHeaders: {},\r\n};\r\n\r\nclass Api extends EventEmitter implements FetchApi {\r\n  public GET = this._makeMethod(HttpMethod.GET);\r\n  public POST = this._makeMethod(HttpMethod.POST, true);\r\n  public PUT = this._makeMethod(HttpMethod.PUT, true);\r\n  public DELETE = this._makeMethod(HttpMethod.DELETE);\r\n  public PATCH = this._makeMethod(HttpMethod.PATCH, true);\r\n\r\n  public setDefaultHeader = (key: string, value: string) => {\r\n    defaultHeaders[key] = value;\r\n  }\r\n\r\n  public _makeMethod(method: HttpMethod, hasBody: boolean = false): ResourceFetchTemplate<any, any> {\r\n    return (\r\n      urlTemplate: string,\r\n      endpointConfig: EndpointConfig = DEFAULT_ENDPOINT_CONFIG,\r\n    ): ResourceFetch<any, any> => {\r\n      return (data: any = undefined, fetchConfig: FetchConfig = {}): Promise<any> => {\r\n        const result: {url: string, data: any} = injectParameters(urlTemplate, data, hasBody);\r\n        const { authenticated, endpointHeaders } = endpointConfig;\r\n\r\n        const headers: any = {\r\n          Accept: ContentTypes.JSON,\r\n          ...defaultHeaders,\r\n          ...endpointHeaders,\r\n        };\r\n\r\n        let body = null;\r\n        if (hasBody && result.data) {\r\n          if (typeof result.data === 'string') {\r\n            body = result.data;\r\n            headers['Content-Type'] = ContentTypes.TEXT;\r\n          } else if (result.data instanceof FormData || fetchConfig.asFormData) {\r\n            body = toFormData(result.data);\r\n            headers['Content-Type'] = ContentTypes.FORM_DATA;\r\n          } else {\r\n            body = JSON.stringify(result.data);\r\n            headers['Content-Type'] = ContentTypes.JSON;\r\n          }\r\n        }\r\n\r\n        if (authenticated && !headers.Authorization) {\r\n          headers.Authorization = getAuthorizationHeader();\r\n        }\r\n\r\n        return this._makeRequest(method, result.url, headers, body);\r\n      };\r\n    };\r\n  }\r\n\r\n  public _makeRequest(\r\n    method: HttpMethod,\r\n    url: string,\r\n    headers: HeadersInit,\r\n    body: string | FormData | null,\r\n  ): Promise<any> {\r\n    return fetch(url, {\r\n      method,\r\n      headers,\r\n      body,\r\n    })\r\n      .then((response: any) => {\r\n        this.emit(`${response.status}`, url);\r\n        const contentType = response.headers.get('Content-Type');\r\n        console.log(contentType, 'content');\r\n        const mappingFunction = contentTypeMappings[contentType] || (resp => resp.arrayBuffer());\r\n\r\n        return new Promise(resolve => resolve(mappingFunction(response)))\r\n          .catch(err => {\r\n            Promise.reject({\r\n              type: 'NetworkError',\r\n              status: response.status,\r\n              message: err,\r\n            });\r\n          })\r\n          .then((responseBody: any) => {\r\n            if (response.ok) {\r\n              console.log(response, 'RESPONSEBODY');\r\n              return responseBody;\r\n            }\r\n\r\n            if (response.status >= HttpStatus.SERVER_ERROR) {\r\n              return Promise.reject({\r\n                type: 'ServerError',\r\n                status: response.status,\r\n                body: responseBody,\r\n              });\r\n            }\r\n            if (response.status < HttpStatus.SERVER_ERROR) {\r\n              return Promise.reject({\r\n                type: 'ApplicationError',\r\n                status: response.status,\r\n                body: responseBody,\r\n              });\r\n            }\r\n          });\r\n      })\r\n      .catch((err: any) => {\r\n        return err.type\r\n          ? Promise.reject(err)\r\n          : Promise.reject({\r\n              type: 'ConnectionRefused',\r\n              status: HttpStatus.SERVER_ERROR,\r\n              body: 'Check your internet connection',\r\n            });\r\n      });\r\n  }\r\n}\r\n\r\nconst instance = new Api();\r\n\r\nexport default instance;\r\n","import * as querystring from 'querystring';\r\n\r\n// This is used to replace the placeholders of the url with data(body)\r\nexport const injectParameters = (urlTemplate: string, data: any = {}, hasBody = true): {url: string, data: any} => {\r\n  let url = urlTemplate;\r\n\r\n  for (const tag of url.match(/:\\w+/g) || []) {\r\n    const urlTag = tag.slice(1);\r\n\r\n    // PORT :8000/...\r\n    if (!isNaN(parseInt(urlTag, 10))) {\r\n      delete data[urlTag];\r\n      continue;\r\n    }\r\n    let value = data[urlTag];\r\n    if (value === undefined) {\r\n      value = urlTag;\r\n    }\r\n    url = url.replace(tag, encodeURIComponent(value));\r\n\r\n    // Remove that tag from the body\r\n    delete data[urlTag];\r\n  }\r\n\r\n  if (!hasBody) {\r\n    const qs = querystring.stringify(data);\r\n    if (qs) {\r\n      url += (url.indexOf('?') >= 0 ? '&' : '?') + qs;\r\n    }\r\n  }\r\n\r\n  // Returning here the url and the updated body. This is needed because\r\n  // otherwise data would not be updated as it is passed by value\r\n  // It's a trade off to prevent sending a body with unwanted data in it\r\n  return {url, data};\r\n};\r\n","export const toFormData = (data: any): FormData => {\r\n  if (data instanceof FormData) {\r\n    return data;\r\n  }\r\n  const formData = new FormData();\r\n  Object.keys(data).forEach(key => formData.append(key, data[key]));\r\n  return formData;\r\n};\r\n","import api from 'app/lib/api';\r\nimport { Country } from 'app/models';\r\nimport secrets from 'app/secrets';\r\nimport { ResourceFetch } from 'app/types/Api';\r\n\r\nconst baseUrl: string = secrets.countryService || '';\r\n\r\nconst { GET } = api;\r\n\r\nexport interface CountryResource {\r\n  // ResourceFetch<Response, Payload>\r\n  getCountries: ResourceFetch<Country.Model[], PartialPick<Country.Model, 'name'>>;\r\n}\r\n\r\nexport const CountryResource: CountryResource = {\r\n  getCountries: GET(baseUrl + 'country/list/' + ':name', { authenticated: false })\r\n};","import { Country } from 'app/models';\r\n\r\nexport const initialState: CountryState = {\r\n  countries: [],\r\n  country: null,\r\n  isLoading: false,\r\n};\r\n\r\nfor (let index = 0; index < 10; index++) {\r\n  // initialState.countries.push(\r\n  //   {\r\n  //     'latitude': 9.866642,\r\n  //     'longitude': 126.043018,\r\n  //     'type': 'venue',\r\n  //     'name': 'Siargao Island',\r\n  //     'number': 0,\r\n  //     'postal_code': '',\r\n  //     'street': '',\r\n  //     'confidence': 1,\r\n  //     'region': 'Surigao del Norte',\r\n  //     'region_code': 'ST',\r\n  //     'county': 'Pilar',\r\n  //     'locality': '',\r\n  //     'administrative_area': '',\r\n  //     'neighbourhood': '',\r\n  //     'country': 'Philippines',\r\n  //     'country_code': 'PHL',\r\n  //     'continent': 'Asia',\r\n  //     'label': 'Siargao Island, ST, Philippines'},\r\n  // );\r\n}\r\n\r\nexport type CountryState = {\r\n  countries: Country.Model[];\r\n  country: Country.Model | null;\r\n  isLoading: boolean;\r\n};","import { handleActions } from 'redux-actions';\r\nimport { CountryActions } from './../actions';\r\nimport { Country } from 'app/models';\r\nimport { CountryState, initialState } from '../state';\r\nimport update from 'immutability-helper';\r\n\r\nexport const countryReducer = handleActions<CountryState, Country.Model[] & Country.Model>(\r\n  {\r\n    [CountryActions.Type.GET_COUNTRIES_REQUEST]: (state, action) => {\r\n      return update(state, {\r\n        countries: { $set: [] },\r\n        isLoading: { $set: true }\r\n      });\r\n    },\r\n    [CountryActions.Type.GET_COUNTRIES_SUCCESS]: (state, action) => {\r\n      // GET 10 results only\r\n      return update(state, {\r\n        countries: { $set: action.payload.slice(0, 9) },\r\n        isLoading: { $set: false }\r\n      });\r\n    },\r\n    [CountryActions.Type.GET_COUNTRIES_FAILURE]: (state, action) => {\r\n      return update(state, {\r\n        isLoading: { $set: false }\r\n      });\r\n    },\r\n    [CountryActions.Type.CLEAR_COUNTRIES]: (state, action) => {\r\n      return update(state, {\r\n        countries: { $set: [] }\r\n      });\r\n    },\r\n    [CountryActions.Type.SELECT_COUNTRY]: (state, action) => {\r\n      return update(state, {\r\n        country: { $set: action.payload }\r\n      });\r\n    }\r\n  },\r\n  initialState\r\n);\r\n","import secrets from '../secrets';\r\nimport { Middleware } from 'redux';\r\n\r\nexport const logger: Middleware = (store) => (next) => (action) => {\r\n\tif (secrets.app.environment !== 'production') {\r\n\t\tconsole.log(action);\r\n\t}\r\n\treturn next(action);\r\n};\r\n","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { DivIcon, Marker } from 'leaflet';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from 'app/stores';\r\nimport { Country } from 'app/models';\r\n\r\nexport namespace _WindyMap {\r\n  export interface Props {\r\n    country?: Country.Model | null;\r\n  }\r\n  \r\n  export interface State {\r\n  }\r\n}\r\n\r\nexport const _WindyMap: React.FC<_WindyMap.Props> = ({\r\n  country = null\r\n}: _WindyMap.Props) => {\r\n  const [windyMap, setWindyMap] = React.useState<any>(null);\r\n  const indexPkg: any = window; \r\n  const windyApiKey: string = 'ocVsUGWwD1Ansc7fZYLYZaTJg6eBssHf';\r\n  const options = {\r\n    key: windyApiKey, \r\n    // Put additional console output\r\n    verbose: false,\r\n    // Optional: Initial state of the map\r\n    lat: 14.40,\r\n    lon: 121.03,\r\n    zoom: 5,\r\n    latlon: true\r\n  };\r\n  \r\n  const dotAnimated = `${style['pulsating-icon']} ${style.repeat}`;\r\n  let radarMarker: Marker | null = null;\r\n\r\n  const windyInit = (windyAPI: any) => {\r\n    // windyAPI is ready, and contain 'map', 'store',\r\n    // 'picker' and other usefull stuff\r\n\r\n    const { map } = windyAPI;\r\n    setWindyMap(map);\r\n\r\n    // setTimeout(() => {\r\n    //   picker.open({ \r\n    //     lat: 40.68295,\r\n    //     lon: -73.9708, \r\n    //   });\r\n    // }, 3000);\r\n\r\n    const windyLogo: HTMLElement | null = document.getElementById('logo-wrapper');\r\n    const accumulations: HTMLElement | null = document.getElementById('accumulations');\r\n    if (windyLogo) {\r\n      windyLogo.style.display = 'none';\r\n    }\r\n\r\n    if (accumulations) {\r\n      accumulations.style.display = 'none';\r\n    }\r\n  };\r\n\r\n  const addRadarMarker = (lat: number, lng: number) => {\r\n    const divIcon: DivIcon = indexPkg.L.divIcon(\r\n      {\r\n        iconSize: [10, 10],\r\n        className: `${style['icon-dot']}`,\r\n        html: `<div class=\"${dotAnimated}\"></div>`\r\n      });\r\n\r\n    if (radarMarker) {\r\n      windyMap.removeLayer(radarMarker);\r\n    }\r\n\r\n    radarMarker = indexPkg.L.marker([lat, lng], {\r\n      icon: divIcon\r\n    });\r\n    windyMap.addLayer(radarMarker);\r\n  };\r\n\r\n  React.useEffect(() => {\t\r\n    if (windyMap) {\r\n      // addRadarMarker(7.07306, 125.61278);\r\n      windyMap.on('click', (e: any) => {\r\n        const lat: number = e.latlng.lat;\r\n        const lng: number = e.latlng.lng;\r\n        console.log(e);\r\n        addRadarMarker(lat, lng);\r\n      });\r\n    }\r\n  }, [windyMap]);\r\n\r\n  React.useEffect(() => {\r\n    if (windyMap) {\r\n      if (country) {\r\n        let lat = country.latitude;\r\n        let lng = country.longitude;\r\n        windyMap\r\n          .panTo([lat, lng] , { animate: true, duration: 0.5 });\r\n\r\n        setTimeout(() => {\r\n          indexPkg.L.popup({ autoPan: true, className: style.popup })\r\n          .setLatLng([lat, lng])\r\n          .setContent(`\r\n          <div class='${style['popup-name']}'>${country.name}</div>\r\n          <div>${country.country}, ${country.country_code}</div>\r\n          <div>${country.continent}</div>\r\n          <div>Lat: ${country.latitude}</div>\r\n          <div>Long: ${country.longitude}</div>\r\n          `)\r\n          .openOn(windyMap);\r\n        }, 1500);\r\n      }\r\n    }\r\n  }, [windyMap, country]);\r\n\r\n  React.useEffect(() => {\r\n    indexPkg.windyInit(options, windyInit);\r\n  }, []);\r\n\r\n  return <div id='windy' className={style.windy} />;\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<_WindyMap.Props, 'country'> => {\r\n  return {\r\n    country: state.country.country,\r\n  };\r\n};\r\n\r\nexport const WindyMap: React.FC<_WindyMap.Props> = connect(\r\n  mapStateToProps,\r\n  null\r\n)(_WindyMap);","// import { createBrowserHistory } from 'history';\r\n\r\nexport function omit<T extends object, K extends keyof T>(target: T, ...omitKeys: K[]): Omit<T, K> {\r\n\treturn (Object.keys(target) as K[]).reduce(\r\n\t\t(res, key) => {\r\n\t\t\tif (!omitKeys.includes(key)) {\r\n\t\t\t\tres[key] = target[key];\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t},\r\n\t\t{} as any\r\n\t);\r\n}\r\n\r\n// export const history = createBrowserHistory();\r\n","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { RootState } from 'app/stores';\r\nimport { CountryActions } from 'app/stores/country/actions';\r\nimport { omit } from 'app/utils';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { useInput } from 'app/components';\r\nimport { Country } from 'app/models';\r\n\r\nexport namespace _SearchInput {\r\n  export interface Props {\r\n    countries?: Country.Model[];\r\n    isLoading?: boolean;\r\n\r\n    countryActions?: CountryActions;\r\n    setFocus: (focus: boolean) => void;\r\n  }\r\n}\r\n\r\nexport const _SearchInput: React.FC<_SearchInput.Props> = ({\r\n  countries = [],\r\n  isLoading = false,\r\n\r\n  countryActions = CountryActions,\r\n  setFocus = () => { return; }\r\n }) => {\r\n  const [inputValue, setInputValue] = React.useState<string>('');\r\n  \r\n  const search = () => {\r\n    if (inputValue === '') return;\r\n    countryActions.getCountries(inputValue);\r\n  };\r\n\r\n  const enterKey = () => {\r\n    search();\r\n  };\r\n\r\n  const [searchInput, searchValue, isFocus] = useInput({ \r\n    type: 'text', \r\n    className: style['search-input'], \r\n    placeHolder: 'Search for country or city',\r\n    enterKey: enterKey });\r\n\r\n  React.useEffect(() => {\r\n    setInputValue(searchValue);\r\n  }, [searchValue]);\r\n\r\n  React.useEffect(() => {\r\n    setFocus(isFocus);\r\n  }, [isFocus]);\r\n\r\n  return (\r\n    <>\r\n      {searchInput}\r\n      {isLoading ? null : <div onClick={search} className={style['magnifying-glass']} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<_SearchInput.Props, 'countries' | 'isLoading'> => {\r\n  return {\r\n    countries: state.country.countries,\r\n    isLoading: state.country.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<_SearchInput.Props, 'countryActions'> => ({\r\n  countryActions: bindActionCreators(omit(CountryActions, 'Type'), dispatch)\r\n});\r\n\r\nexport const SearchInput: React.FC<_SearchInput.Props> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_SearchInput);","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { RootState } from 'app/stores';\r\nimport { CountryActions } from 'app/stores/country/actions';\r\nimport { omit } from 'app/utils';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { useInput } from 'app/components';\r\nimport { Country } from 'app/models';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport namespace _SearchInputMobile {\r\n  export interface Props {\r\n    mobileSearch: boolean;\r\n    countries?: Country.Model[];\r\n    isLoading?: boolean;\r\n\r\n    toggleMobileSearch: () => void;\r\n    countryActions?: CountryActions;\r\n  }\r\n}\r\n\r\nexport const _SearchInputMobile: React.FC<_SearchInputMobile.Props> = ({\r\n  mobileSearch = false,\r\n  countries = [],\r\n  isLoading = false,\r\n\r\n  toggleMobileSearch = () => { return null; },\r\n  countryActions = CountryActions,\r\n }) => {\r\n  const [inputValue, setInputValue] = React.useState<string>('');\r\n  \r\n  const search = () => {\r\n    if (inputValue === '') return;\r\n    countryActions.getCountries(inputValue);\r\n  };\r\n\r\n  const enterKey = () => {\r\n    search();\r\n  };\r\n\r\n  const [searchInput, searchValue] = useInput({ \r\n    type: 'text', \r\n    className: style['m-search-input'], \r\n    placeHolder: 'Search for country or city',\r\n    enterKey: enterKey });\r\n\r\n  React.useEffect(() => {\r\n    setInputValue(searchValue);\r\n  }, [searchValue]);\r\n\r\n  React.useEffect(() => {\r\n    const progressBar: HTMLElement | null = document.getElementById('progress-bar');\r\n    if (progressBar) {\r\n      if (mobileSearch) {\r\n        progressBar.style.display = 'none';\r\n      } else {\r\n        progressBar.style.display = 'block';\r\n      }\r\n    }\r\n  }, [mobileSearch]);\r\n\r\n  const clickMagnifying = () => {\r\n    search();\r\n  };\r\n\r\n  const close = () => {\r\n    toggleMobileSearch();\r\n    countryActions.clearCountries();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`${style['m-search-header']} ${mobileSearch ? style.toggle : ''}`}>\r\n        <FontAwesomeIcon icon={faSearch} className={style['m-search-icons']} onClick={clickMagnifying} />\r\n        {searchInput}\r\n        <FontAwesomeIcon icon={faTimes} className={style['m-search-icons']} onClick={close} />\r\n      </div>\r\n      {mobileSearch ? null : <FontAwesomeIcon onClick={toggleMobileSearch} className={style['m-magnifying-glass']} icon={faSearch} /> }\r\n      <div className={`${style['m-overlay']} ${mobileSearch ? style.toggle : ''}`}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<_SearchInputMobile.Props, 'countries' | 'isLoading'> => {\r\n  return {\r\n    countries: state.country.countries,\r\n    isLoading: state.country.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<_SearchInputMobile.Props, 'countryActions'> => ({\r\n  countryActions: bindActionCreators(omit(CountryActions, 'Type'), dispatch)\r\n});\r\n\r\nexport const SearchInputMobile: React.FC<_SearchInputMobile.Props> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_SearchInputMobile);","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { RootState } from 'app/stores';\r\nimport { connect } from 'react-redux';\r\nimport { Country } from 'app/models';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { omit } from 'app/utils';\r\nimport { CountryActions } from 'app/stores/country/actions';\r\n\r\nexport namespace _SearchResults {\r\n  export interface Props {\r\n    countries?: Country.Model[];\r\n    isLoading?: boolean;\r\n\r\n    toggleMobileSearch: () => void;\r\n    countryActions?: CountryActions;\r\n  }\r\n}\r\n\r\nexport const _SearchResults: React.FC<_SearchResults.Props> = ({\r\n  countries = [],\r\n  isLoading = false, \r\n\r\n  toggleMobileSearch = () => { return null; },\r\n  countryActions = CountryActions,\r\n }) => {\r\n  // const [showList, setShowList] = React.useState<boolean>(false);\r\n\r\n  // React.useEffect(() => {\r\n  //   console.log(countries, '########## search');\r\n  // }, [countries]);\r\n\r\n  const select = (country: Country.Model) => {\r\n    countryActions.clearCountries();\r\n    countryActions.selectCountry(country);\r\n    toggleMobileSearch();\r\n  };\r\n\r\n  const getList = (): JSX.Element => {\r\n    let opacity: number = 1;\r\n    return (\r\n      <>\r\n        <ul className={style['search-ul']}>\r\n          {countries.map(country => ( \r\n            <li onClick={() => select(country)} key={country.latitude} style={{'opacity': opacity -= .07}}>\r\n              <div>\r\n                <span>{country.name}</span>\r\n                <span>{country.label}</span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getLoading = () => {\r\n    return (\r\n      <>\r\n        <div className={style['loading-container']}>\r\n          <div className={style['lds-ripple']}>\r\n            <div />\r\n            <div />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (isLoading) {\r\n    return getLoading();\r\n  }\r\n\r\n  if (countries.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return getList();\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): Pick<_SearchResults.Props, 'countries' | 'isLoading'> => {\r\n  return {\r\n    countries: state.country.countries,\r\n    isLoading: state.country.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<_SearchResults.Props, 'countryActions'> => ({\r\n  countryActions: bindActionCreators(omit(CountryActions, 'Type'), dispatch)\r\n});\r\n\r\nexport const SearchResults: React.FC<_SearchResults.Props> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_SearchResults);","import * as React from 'react';\r\nimport * as style from './style.css';\r\nimport { SearchInput, SearchResults } from 'app/components';\r\nimport { SearchInputMobile } from '../SearchInputMobile';\r\n\r\nexport namespace Search {\r\n  export interface Props {\r\n  }\r\n  export interface State {\r\n\r\n  }\r\n}\r\n\r\nexport const Search: React.FC<Search.Props> = (props: Search.Props) => {\r\n  const [inputFocus, setInputFocus] = React.useState<boolean>(false);\r\n  const [mobileSearch, setMobileSearch] = React.useState<boolean>(false);\r\n\r\n  const setFocus = (focus: boolean) => {\r\n    setInputFocus(focus);\r\n  };\r\n\r\n  const toggleMobileSearch = () => {\r\n    setMobileSearch(!mobileSearch);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchInputMobile mobileSearch={mobileSearch} toggleMobileSearch={toggleMobileSearch} />\r\n      <div className={`${style['search-section-container']} ${inputFocus ? style.focus : '' }`}>\r\n        <SearchInput setFocus={setFocus} />\r\n      </div>\r\n      <SearchResults toggleMobileSearch={toggleMobileSearch} />\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nexport namespace useInput {\r\n  export interface Props {\r\n    type: string;\r\n    className: string;\r\n    placeHolder: string;\r\n    enterKey: () => void;\r\n  }\r\n}\r\n\r\n export const useInput = ({ type, className, placeHolder, enterKey }: useInput.Props): [JSX.Element, string, boolean] => {\r\n  const [value, setValue] = React.useState<string>('');\r\n  const [focus, setFocus] = React.useState<boolean>(false);\r\n\r\n  const onKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' || e.keyCode === 13) {\r\n      enterKey();\r\n    }\r\n  };\r\n\r\n  const input = <input \r\n    value={value} \r\n    onChange={e => setValue(e.target.value)} \r\n    onFocus={e => setFocus(true)}\r\n    onBlur={e => setFocus(false)}\r\n    onKeyUp={e => onKeyUp(e)}\r\n    type={type} \r\n    className={className}\r\n    placeholder={placeHolder} \r\n    spellCheck='false'\r\n  />;\r\n  return [input, value, focus];\r\n};","import * as React from 'react';\r\nimport { Search, WindyMap } from 'app/components';\r\n\r\nexport namespace HomePage {\r\n  export interface Props {\r\n  }\r\n  export interface State {\r\n  }\r\n}\r\n\r\nexport const HomePage: React.FC<HomePage.Props> = (props: HomePage.Props) => {\r\n  return (\r\n    <>\r\n      <Search />  \r\n      {false ? null : <WindyMap />}\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { HomePage } from 'app/pages';\r\n\r\nexport namespace App {\r\n\texport interface Props {\r\n\r\n\t}\r\n\r\n\texport interface State {\r\n\r\n\t}\r\n}\r\n\r\nexport class App extends React.Component<App.Props, App.State> {\r\n\tconstructor(props: App.Props, context?: any) {\r\n\t\tsuper(props, context);\r\n\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<HomePage />\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { configureStore } from './app/stores';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './app';\r\n\r\nimport 'normalize.css';\r\nimport './default.css';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);","import secrets from 'app/secrets';\r\nimport thunk from 'redux-thunk';\r\nimport { countryReducer } from './country/reducers';\r\nimport { CountryState } from './country/state';\r\nimport {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore,\r\n  Store\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { logger } from 'app/middlewares';\r\nimport { ReduxCompatibleReducer } from 'redux-actions';\r\nimport { Country } from 'app/models';\r\n\r\nexport interface RootState {\r\n  country: CountryState;\r\n  router?: any;\r\n}\r\n\r\nexport function configureStore(initialState?: RootState): Store<RootState> {\r\n  let middleware = applyMiddleware(logger, thunk);\r\n\r\n  if (secrets.app.environment !== 'production') {\r\n    middleware = composeWithDevTools(middleware);\r\n  }\r\n\r\n  const rootReducer = combineReducers<RootState>({\r\n    country: countryReducer as ReduxCompatibleReducer<CountryState, Country.Model[]>\r\n  });\r\n\r\n  const store = createStore(rootReducer as any, initialState as any, middleware) as Store<\r\n    RootState\r\n  >;\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('app/stores', () => {\r\n      const nextReducer = require('app/stores');\r\n      store.replaceReducer(nextReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexport * from './country/reducers';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windy\":\"_3F23W\",\"icon-dot\":\"ru-Z8\",\"pulsating-icon\":\"_2lpRt\",\"pulsate\":\"_38Zl-\",\"repeat\":\"_11h4g\",\"popup-name\":\"_2sUBN\",\"pulsate-opacity\":\"_2AORO\"};","export default {\r\n  app: {\r\n    environment: typeof process.env.NODE_ENV !== undefined\r\n      ? process.env.NODE_ENV\r\n      : 'production',\r\n    logLevel: process.env.APP_LOG_LEVEL,\r\n    port: process.env.APP_PORT || 8001\r\n  },\r\n  countryService: process.env.COUNTRY_SERVICE\r\n};\r\n"],"sourceRoot":""}